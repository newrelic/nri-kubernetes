apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.daemonset.name }}-{{ .Release.Name }}
  namespace: {{ .Values.daemonset.namespace }}
  labels:
    app: {{ .Values.daemonset.name }}
spec:
  selector:
    matchLabels:
      name: {{ .Values.daemonset.name }}
  updateStrategy:
      type: RollingUpdate # Only supported in Kubernetes version 1.6 or later.
  template:
    metadata:
      labels:
        name: {{ .Values.daemonset.name }}
        releaseName: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}-{{ .Release.Name }}
      hostNetwork: true # This option is a requirement for the Infrastructure Agent to report the proper hostname in New Relic.
      dnsPolicy: ClusterFirstWithHostNet
      #imagePullSecrets:
      #  - name: nr-quay-secret
      containers:
        - name: {{ .Values.daemonset.name }}
          image: "{{ .Values.daemonset.image.repository }}:{{ .Values.daemonset.image.tag }}"
          {{- if eq .Values.daemonset.clusterFlavor "Minikube" }}
          imagePullPolicy: Never
          {{- else }}
          imagePullPolicy: Always
          {{- end }}
          resources:
{{ toYaml .Values.daemonset.resources | indent 12 }}
          {{- if .Values.daemonset.unprivileged }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          {{- end }}
          volumeMounts:
            {{- if .Values.daemonset.unprivileged }}
            - mountPath: /var/db/newrelic-infra/data
              name: tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: tmpfs-user-data
            - mountPath: /tmp
              name: tmpfs-tmp
            {{- else }}
            - mountPath: /host
              name: host-volume
              readOnly: true
            - mountPath: /var/run/docker.sock
              name: host-docker-socket
            {{- end }}
          env:
            {{- if eq .Values.daemonset.clusterFlavor "Minikube" }}
              {{- if and (ne .Values.daemonset.clusterVersion "v1.15.x") (ne .Values.daemonset.clusterVersion "v1.14.x") (ne .Values.daemonset.clusterVersion "v1.13.x") }}
            - name: "SCHEDULER_ENDPOINT_URL"
              value: "https://localhost:10259"
              {{- end }}
            {{- end }}
            {{- if eq .Values.daemonset.clusterFlavor "Minikube" }}
            - name: "API_SERVER_ENDPOINT_URL"
              value: "https://localhost:8443"
            - name: "CONTROLLER_MANAGER_ENDPOINT_URL"
              value: "https://localhost:10257"
            {{- end }}
            - name: "CLUSTER_NAME"
              value: {{ .Values.integration.k8sClusterName | quote }}
            - name: "NRIA_LICENSE_KEY"
              value: {{ .Values.integration.newRelicLicenseKey | quote }}
            - name: "NRIA_VERBOSE"
              value: {{ .Values.integration.verbose | int | toString | quote }}
            {{- if .Values.integration.collectorURL }}
            - name: "NRIA_COLLECTOR_URL"
              value: {{ .Values.integration.collectorURL }}
            {{- end }}
            {{- if .Values.integration.ksm }}
            - name: "KUBE_STATE_METRICS_URL" # If this value is specified then discovery process for kube-state-metrics endpoint won't be triggered.
              value: {{ .Values.integration.ksm.url | quote}} # This is example value. Only HTTP request is accepted.
            {{- end }}
            - name: DISCOVERY_CACHE_TTL
              value: 0s
            {{- if .Values.daemonset.unprivileged }}
            - name: "DISCOVERY_CACHE_DIR"
              value: "/tmp/nr-kuberentes"
            {{- end }}
            - name: "NRIA_DISPLAY_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRK8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRIA_PASSTHROUGH_ENVIRONMENT"
              value: "KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT,CLUSTER_NAME,CADVISOR_PORT,NRK8S_NODE_NAME,KUBE_STATE_METRICS_URL,DISCOVERY_CACHE_DIR,DISCOVERY_CACHE_TTL"
      volumes:
        {{- if .Values.daemonset.unprivileged }}
        - name: tmpfs-data
          emptyDir: {}
        - name: tmpfs-user-data
          emptyDir: {}
        - name: tmpfs-tmp
          emptyDir: {}
        {{- else }}
        - name: host-volume
          hostPath:
            path: /
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        {{- end }}
      tolerations:
        - operator: "Exists"
          effect: "NoSchedule"
        - operator: "Exists"
          effect: "NoExecute"
