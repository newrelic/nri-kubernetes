apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:17:16Z"
    generateName: coredns-565d847f94-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 565d847f94
    name: coredns-565d847f94-xmmbs
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-565d847f94
      uid: dbe0be04-732d-42e9-a7f3-4cf772277433
    resourceVersion: "407"
    uid: 44d31070-ccf8-4f7d-ba2b-fd4a578836eb
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxjkx
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: datagen-1-25
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-fxjkx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d2e4f7150da2090f5a3bbcdddc519c202823ddbc547fa5161c66673b22ddaddb
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imageID: registry.k8s.io/coredns/coredns@sha256:8e352a029d304ca7431c6507b56800636c321cb52289686a581ab70aaa8a2e2a
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:17:57Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2023-09-06T16:17:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: 3d328c840f4dfc8953f008b18601229b
      kubernetes.io/config.mirror: 3d328c840f4dfc8953f008b18601229b
      kubernetes.io/config.seen: "2023-09-06T16:17:02.925225387Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:17:03Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 359f9e46-7820-4079-920b-6b35e3c99b48
    resourceVersion: "270"
    uid: 0207457f-1312-47bc-a9c8-2d9aaddd79dd
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=datagen-1-25=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=datagen-1-25
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.6-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://50fc3851f1b6ea10f08eee7392be5eed4e4a15fd526e4b776cfece686327e7c1
      image: registry.k8s.io/etcd:3.5.6-0
      imageID: registry.k8s.io/etcd@sha256:dd75ec974b0a2a6f6bb47001ba09207976e625db898d1b16735528c009cb171c
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:16:58Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:17:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:17:16Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 64dc66978d
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-c7tw4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: 34701d8d-7fdb-48fb-8697-559725c151e9
    resourceVersion: "373"
    uid: fb0175a4-6be0-4751-be2c-b8f9906b18cd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-25
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v5q46
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-v5q46
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c4a18f9eb1e794a15859dc2ff82aaa048c033231b61d9d4153b81e4cb26df1cf
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imageID: docker.io/kindest/kindnetd@sha256:6c00e28db008c2afa67d9ee085c86184ec9ae5281d5ae1bd15006746fb9a1974
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:17:17Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Guaranteed
    startTime: "2023-09-06T16:17:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: 6a14f814004c35a2f60db32f893548b2
      kubernetes.io/config.mirror: 6a14f814004c35a2f60db32f893548b2
      kubernetes.io/config.seen: "2023-09-06T16:17:02.925221804Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:17:03Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 359f9e46-7820-4079-920b-6b35e3c99b48
    resourceVersion: "293"
    uid: 42b627ed-bc31-45a1-bd36-0fe75270caab
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.25.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://397bef62124197a883667024cef77289004153589ce3615c1f0659d3ef0e4e60
      image: registry.k8s.io/kube-apiserver:v1.25.13
      imageID: registry.k8s.io/kube-apiserver@sha256:cffdbe8a2ae462abd37cef48ce472cad9c5c81874b4d18773e1648f74cf60c1b
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:16:58Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:17:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: e8529e3c198627e613f21296315038f3
      kubernetes.io/config.mirror: e8529e3c198627e613f21296315038f3
      kubernetes.io/config.seen: "2023-09-06T16:17:02.925224387Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:17:03Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 359f9e46-7820-4079-920b-6b35e3c99b48
    resourceVersion: "357"
    uid: 930e746e-b5ed-486f-a36c-b666172b6e48
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.25.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0b4f81cb1c9e4940f4202512c6e6c2a9c079d2570ee09722029460cc17fdac3e
      image: registry.k8s.io/kube-controller-manager:v1.25.13
      imageID: registry.k8s.io/kube-controller-manager@sha256:24a081a29e8d39242fb576b859e7fb3306357328bd71d82b7791a8b0d5f7c86d
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:16:58Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:17:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:17:16Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 766db5dff
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-fvdv4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: a6df6efe-e744-44d0-9ec7-db6101a18db6
    resourceVersion: "376"
    uid: 24f5fdb3-3109-43a0-a47e-3c847778e26a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-25
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.25.13
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gmdhd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-gmdhd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4e5d8b2f7303d2d249d64a6405be4de9810f9d98e33b52282aa4d84943ff85af
      image: registry.k8s.io/kube-proxy:v1.25.13
      imageID: registry.k8s.io/kube-proxy@sha256:33fb089ff7671c9430af45d4ffdeba4dafbb65e9a5bf3dae348c63c6e1112279
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:17:18Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-09-06T16:17:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 1dcf112a73c9e72a923251d71ddaa9f7
      kubernetes.io/config.mirror: 1dcf112a73c9e72a923251d71ddaa9f7
      kubernetes.io/config.seen: "2023-09-06T16:16:56.326152218Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:17:02Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 359f9e46-7820-4079-920b-6b35e3c99b48
    resourceVersion: "289"
    uid: 6fa24def-721c-48db-8c32-17233e081c80
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      image: registry.k8s.io/kube-scheduler:v1.25.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5321084ff34c10a2cc5328b5bfecab5d7402b993077a414c193f9228a2939a27
      image: registry.k8s.io/kube-scheduler:v1.25.13
      imageID: registry.k8s.io/kube-scheduler@sha256:ba8bbf046bce89180237ba73f17986a8b2be06d4e46d472861311378bdfd46b5
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:16:58Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:17:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:17:58Z"
    generateName: metrics-server-bc5dcdf-
    labels:
      k8s-app: metrics-server
      pod-template-hash: bc5dcdf
    name: metrics-server-bc5dcdf-m29pd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-bc5dcdf
      uid: 9d6aff60-b25f-4be8-8b33-f0a068555517
    resourceVersion: "459"
    uid: a7173d71-8480-43e2-97b0-6e7852dc0645
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=60s
      - --kubelet-insecure-tls
      image: registry.k8s.io/metrics-server/metrics-server:v0.6.4@sha256:ee4304963fb035239bb5c5e8c10f2f38ee80efc16ecbdb9feb7213c17ae2e86e
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4hl68
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-4hl68
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f6b037da390dbbc366cf3068f7decb1c19ff7977e31bff304d9d6ee4c9d3b28c
      image: sha256:24087ab2d904727e386558a98b90f67b7a9d1cf74b3496b2d238af32484f1c19
      imageID: registry.k8s.io/metrics-server/metrics-server@sha256:ee4304963fb035239bb5c5e8c10f2f38ee80efc16ecbdb9feb7213c17ae2e86e
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:03Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2023-09-06T16:17:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2023-09-06T16:17:04Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "392"
    uid: 5de80855-9b15-49bd-828a-934013403fd8
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wtpqv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-wtpqv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:17:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b559cb2ca7821baaed2723a9d49d5d64dbbeaa75109439f80e5b5b50a5c8e6c0
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: sha256:66749159455b3f08c8318fe0233122f54d0f5889f9c5fdfb73c3fd9d99895b51
      lastState:
        terminated:
          containerID: containerd://c524eeb6ec91692c8beaaeac16b6f93bf606e66a085477e2a9aa438db1409ad1
          exitCode: 1
          finishedAt: "2023-09-06T16:17:47Z"
          reason: Error
          startedAt: "2023-09-06T16:17:17Z"
      name: storage-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:17:47Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-09-06T16:17:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-09-06T16:18:08Z"
    labels:
      app: creating
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: scraper
    resourceVersion: "769"
    uid: ffb3669f-30d5-41d0-9b9b-66d0d5d53da8
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcw56
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vcw56
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:50Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:50Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9f6983edca738b176b668dfe3fc35bc4ad63e2c9c1e5fb1fc7e1241ab3144ead
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a
      lastState:
        terminated:
          containerID: containerd://9f6983edca738b176b668dfe3fc35bc4ad63e2c9c1e5fb1fc7e1241ab3144ead
          exitCode: 0
          finishedAt: "2023-09-06T16:18:49Z"
          reason: Completed
          startedAt: "2023-09-06T16:18:49Z"
      name: alpine
      ready: false
      restartCount: 1
      started: false
      state:
        waiting:
          message: back-off 10s restarting failed container=alpine pod=e2e-container-creating_scraper(ffb3669f-30d5-41d0-9b9b-66d0d5d53da8)
          reason: CrashLoopBackOff
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: Guaranteed
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-09-06T16:18:08Z"
    labels:
      app: pending
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-pending
    namespace: scraper
    resourceVersion: "510"
    uid: 7dd46a67-96b2-40ec-a2c0-14ed1535d639
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p9zx4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-p9zx4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match Pod''s node affinity/selector.
        preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:19:00Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-cronjob-28233619-
    labels:
      app: cronjob
      controller-uid: bf6931c2-cc33-4b05-98aa-444d4759b5d6
      job-name: e2e-cronjob-28233619
    name: e2e-cronjob-28233619-2fr9t
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-28233619
      uid: bf6931c2-cc33-4b05-98aa-444d4759b5d6
    resourceVersion: "791"
    uid: f332314d-11b5-4c0e-a335-8f7aac70fc1a
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - print bpi(1500)
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 800m
          memory: 100Mi
        requests:
          cpu: 400m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dj8jb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dj8jb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:00Z"
      message: 'containers with unready status: [compute-pi-digits]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:00Z"
      message: 'containers with unready status: [compute-pi-digits]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: perl:5.34.0
      imageID: ""
      lastState: {}
      name: compute-pi-digits
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: Burstable
    startTime: "2023-09-06T16:19:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-depl-59b6859788-
    labels:
      app: deployment
      pod-template-hash: 59b6859788
    name: e2e-depl-59b6859788-wskjx
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-59b6859788
      uid: 7f7176c5-9ebe-451b-902f-f7247c026717
    resourceVersion: "626"
    uid: e298ec52-5a07-405b-942b-9f705fc8989d
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jsnvt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-jsnvt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b1e4a8208278fedab13a6c1bb63b09097ef0e3924e89dcd0ca959708a65627d7
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:15Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-depl-59b6859788-
    labels:
      app: deployment
      pod-template-hash: 59b6859788
    name: e2e-depl-59b6859788-zg8xr
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-59b6859788
      uid: 7f7176c5-9ebe-451b-902f-f7247c026717
    resourceVersion: "675"
    uid: ce97b6f2-0898-4c70-98d3-77ab6a953b56
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n824k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-n824k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3d7b6b03a9c89f89e94aae130aed5c302dfb1b855c6ded5f6853ded9d65073dd
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:37Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.9
    podIPs:
    - ip: 10.244.0.9
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-ds-
    labels:
      app: daemonset
      controller-revision-hash: 854df558c9
      pod-template-generation: "1"
    name: e2e-ds-5dpn5
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-ds
      uid: 2716e177-7ed5-47c7-86c6-92d2584effa3
    resourceVersion: "616"
    uid: 9dea3818-397e-44e5-a8ca-9989a7c92ed6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-25
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f5f9b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-f5f9b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://873d62bdeb1b4177f8ad0742443fcecb3a5a35774bb4bed4aae17f765568ed35
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:12Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:48Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
      job-name: e2e-failjob
    name: e2e-failjob-6jrnk
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
    resourceVersion: "820"
    uid: 18feaec3-588d-4a64-ab25-97ffb251ef87
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z4fsc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-z4fsc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:54Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:54Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://669b285df0f0ba601bc31d168ac6af7f7bb7b0bf447951f0b65964a881ea9948
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://669b285df0f0ba601bc31d168ac6af7f7bb7b0bf447951f0b65964a881ea9948
          exitCode: 42
          finishedAt: "2023-09-06T16:18:54Z"
          reason: Error
          startedAt: "2023-09-06T16:18:49Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:48Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
      job-name: e2e-failjob
    name: e2e-failjob-6tr2w
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
    resourceVersion: "818"
    uid: 9a5fb28f-240f-4990-8bf3-4131ebda325a
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cp7v7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cp7v7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:54Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:54Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f0796fe1fc6fed11c94a4809e2bde3e45d624ec8ed98bcacf5d5e0284dc42aa9
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f0796fe1fc6fed11c94a4809e2bde3e45d624ec8ed98bcacf5d5e0284dc42aa9
          exitCode: 42
          finishedAt: "2023-09-06T16:18:54Z"
          reason: Error
          startedAt: "2023-09-06T16:18:49Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.14
    podIPs:
    - ip: 10.244.0.14
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
      job-name: e2e-failjob
    name: e2e-failjob-lvc7l
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
    resourceVersion: "744"
    uid: f324d646-a7c0-4a50-89cc-9e1fbb0479b8
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nmsjw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nmsjw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:46Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:46Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5494e6f56168adeba5f97e11fb9f3acfbce9b319aeb899b64bdf6678600d7d87
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5494e6f56168adeba5f97e11fb9f3acfbce9b319aeb899b64bdf6678600d7d87
          exitCode: 42
          finishedAt: "2023-09-06T16:18:45Z"
          reason: Error
          startedAt: "2023-09-06T16:18:40Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.10
    podIPs:
    - ip: 10.244.0.10
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:19:16Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
      job-name: e2e-failjob
    name: e2e-failjob-pvv8m
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
    resourceVersion: "843"
    uid: 3588fb61-3705-4106-abb6-4da9b567dd27
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pwf6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9pwf6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:22Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:22Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae74f1a3e4ce77add030c5fde471ac597ac6c5d8786cf4149161ca2351bf72f5
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ae74f1a3e4ce77add030c5fde471ac597ac6c5d8786cf4149161ca2351bf72f5
          exitCode: 42
          finishedAt: "2023-09-06T16:19:22Z"
          reason: Error
          startedAt: "2023-09-06T16:19:17Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.18
    podIPs:
    - ip: 10.244.0.18
    qosClass: BestEffort
    startTime: "2023-09-06T16:19:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:19:16Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
      job-name: e2e-failjob
    name: e2e-failjob-z45fn
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
    resourceVersion: "844"
    uid: 7d5d8f84-ace1-449e-9937-bff62c972ed0
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rw9bf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rw9bf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:22Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:22Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:19:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d329999bdcc38941a796a6c4208054e483784972d0f6c4a67ce7d9549750d592
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d329999bdcc38941a796a6c4208054e483784972d0f6c4a67ce7d9549750d592
          exitCode: 42
          finishedAt: "2023-09-06T16:19:22Z"
          reason: Error
          startedAt: "2023-09-06T16:19:17Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.17
    podIPs:
    - ip: 10.244.0.17
    qosClass: BestEffort
    startTime: "2023-09-06T16:19:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
      job-name: e2e-failjob
    name: e2e-failjob-zgn2t
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: ca256509-578b-47c8-8d42-b8a7ebb11b3c
    resourceVersion: "736"
    uid: 523ba273-0863-4c3f-9ff2-6e64adede40d
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lr9lv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lr9lv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:45Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:45Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7671cffcaed0a06d6612d11d9f428b673ee7682fed4ba95e0927e12b78d44eca
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7671cffcaed0a06d6612d11d9f428b673ee7682fed4ba95e0927e12b78d44eca
          exitCode: 42
          finishedAt: "2023-09-06T16:18:45Z"
          reason: Error
          startedAt: "2023-09-06T16:18:40Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.11
    podIPs:
    - ip: 10.244.0.11
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-hpa-84cf5db7cb-
    labels:
      app: hpa
      pod-template-hash: 84cf5db7cb
      run: php-apache
    name: e2e-hpa-84cf5db7cb-wfpbv
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-84cf5db7cb
      uid: 8d517a85-37bd-4939-b54d-6248336a665c
    resourceVersion: "657"
    uid: 7ee73971-a6d5-471b-9a7d-0d665b5b2b00
  spec:
    containers:
    - image: registry.k8s.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-274p7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-274p7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://272239f730fdfb5dc6bab2ce51df6a01a26d12e32c95528de59b8c3ab41b80d2
      image: registry.k8s.io/hpa-example:latest
      imageID: registry.k8s.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:34Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: Burstable
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-kube-state-metrics-6fd769c848-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.10.0
      helm.sh/chart: kube-state-metrics-5.12.1
      pod-template-hash: 6fd769c848
    name: e2e-kube-state-metrics-6fd769c848-bmg5h
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-kube-state-metrics-6fd769c848
      uid: b1c9293e-6c92-445b-ae3c-5f6b1086fb50
    resourceVersion: "759"
    uid: 0ae10934-7c51-4410-9b2c-25d71d2f592e
  spec:
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qz7ld
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: e2e-kube-state-metrics
    serviceAccountName: e2e-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qz7ld
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0675242a6a4ece1fd1dc306270849d79554f66f28ad410f392155acbce18f0e0
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:ec5d6f6be2280212da0e55572b67d76f29c0342b3b6d24cc47b32d80ee3374a4
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:36Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-scraper-7fcb557b5f-
    labels:
      app: scraper
      pod-template-hash: 7fcb557b5f
    name: e2e-scraper-7fcb557b5f-rjzl5
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-7fcb557b5f
      uid: a2a1191d-c0d3-4dae-b896-76e210750be3
    resourceVersion: "632"
    uid: cf90f53f-1e00-4077-978f-10fe59ca3fba
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-848rk
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-848rk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5c7bc3fca4738b144552be1abc71c45b81284eaf810463946b84a33e036ac6da
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:14Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:08Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-0
    name: e2e-statefulset-0
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: f196ea10-3e1d-4948-8831-c3d7554b667f
    resourceVersion: "694"
    uid: 2083b04e-8cf4-4772-a587-da52aa63af89
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r2rl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-0
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-5r2rl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c300af9ebf8b0dada5c03b036ec4117e4c12d3e2cd40ebe4e6dd878c3f1e704
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:41Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.12
    podIPs:
    - ip: 10.244.0.12
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:18:42Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-1
    name: e2e-statefulset-1
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: f196ea10-3e1d-4948-8831-c3d7554b667f
    resourceVersion: "713"
    uid: 737aadf5-e050-4bb6-8748-0b1d58534410
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pddbt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-1
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-pddbt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:18:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cf324a5d1799ee9adb916925445e420a9a98a3979035e18be28d4427d80dbe91
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:18:43Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.13
    podIPs:
    - ip: 10.244.0.13
    qosClass: BestEffort
    startTime: "2023-09-06T16:18:42Z"
kind: List
metadata:
  resourceVersion: ""
