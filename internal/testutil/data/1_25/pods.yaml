apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:47:51Z"
    generateName: coredns-565d847f94-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 565d847f94
    name: coredns-565d847f94-2r9k4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-565d847f94
      uid: 383dbacf-3dba-4088-8950-87a62b2858c7
    resourceVersion: "389"
    uid: 716ab49f-211c-47bf-9b20-73fe91aa2f8c
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2dvgt
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: datagen-1-25
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-2dvgt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a3fd13370c8901e0a3df9ac8b913c1baee38170e4b53954076af315768d01b4f
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imageID: registry.k8s.io/coredns/coredns@sha256:8e352a029d304ca7431c6507b56800636c321cb52289686a581ab70aaa8a2e2a
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:06Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2023-12-18T17:47:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: 3d328c840f4dfc8953f008b18601229b
      kubernetes.io/config.mirror: 3d328c840f4dfc8953f008b18601229b
      kubernetes.io/config.seen: "2023-12-18T17:47:38.170003419Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-12-18T17:47:38Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 7328684d-1a35-4e18-a353-1ef9a9057101
    resourceVersion: "371"
    uid: fca93903-bc5d-414d-97cb-b1ebb44946eb
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=datagen-1-25=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=datagen-1-25
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.6-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a1dc6925f6533c584883c73a1e14c1bc6406d0ae7933227bdac5b05b884b26
      image: registry.k8s.io/etcd:3.5.6-0
      imageID: registry.k8s.io/etcd@sha256:dd75ec974b0a2a6f6bb47001ba09207976e625db898d1b16735528c009cb171c
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:47:33Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-12-18T17:47:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:47:51Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 8666f7d75d
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-ddg2x
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: 0e35c514-e43b-492d-98eb-815e4e92ef2c
    resourceVersion: "378"
    uid: 6798661a-5a19-4d7d-b1f7-19784c404d2f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-25
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      image: docker.io/kindest/kindnetd:v20230809-80a64d96
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qnbbl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-qnbbl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://40613a95f1e7a680c5f0c6a777d2e665e6092f81e6fd2631ee5a3eddc1fd2dac
      image: docker.io/kindest/kindnetd:v20230809-80a64d96
      imageID: docker.io/kindest/kindnetd@sha256:4a58d1cd2b45bf2460762a51a4aa9c80861f460af35800c05baab0573f923052
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:47:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Guaranteed
    startTime: "2023-12-18T17:47:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: 6a14f814004c35a2f60db32f893548b2
      kubernetes.io/config.mirror: 6a14f814004c35a2f60db32f893548b2
      kubernetes.io/config.seen: "2023-12-18T17:47:33.004576875Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-12-18T17:47:36Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 7328684d-1a35-4e18-a353-1ef9a9057101
    resourceVersion: "276"
    uid: a7f9f023-63ad-4456-afc0-2d07636b6464
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.25.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5b522c2eed3f547cf8cec29eb26ad685701d5b4d499ad746049a4f8cb974931b
      image: registry.k8s.io/kube-apiserver:v1.25.13
      imageID: registry.k8s.io/kube-apiserver@sha256:cffdbe8a2ae462abd37cef48ce472cad9c5c81874b4d18773e1648f74cf60c1b
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:47:33Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-12-18T17:47:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: e8529e3c198627e613f21296315038f3
      kubernetes.io/config.mirror: e8529e3c198627e613f21296315038f3
      kubernetes.io/config.seen: "2023-12-18T17:47:38.170007586Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-12-18T17:47:38Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 7328684d-1a35-4e18-a353-1ef9a9057101
    resourceVersion: "277"
    uid: 483a954a-bc85-4929-8ea4-1fdc3d944fed
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.25.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b785847490c0fc5f2449c4ff0949bb1b5dc65cc5407934f7718a4650657beb07
      image: registry.k8s.io/kube-controller-manager:v1.25.13
      imageID: registry.k8s.io/kube-controller-manager@sha256:24a081a29e8d39242fb576b859e7fb3306357328bd71d82b7791a8b0d5f7c86d
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:47:33Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-12-18T17:47:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:47:51Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 766db5dff
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-gs68p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 6e8cd093-9dc9-434f-89a1-088abb59e265
    resourceVersion: "373"
    uid: 6b852a2a-b872-4650-ba2e-046d27a9a29d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-25
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.25.13
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6chp2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-6chp2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ff58a4d9c93421fe63954fa8ec5321018568c9c61086bf09712232002a88eff6
      image: registry.k8s.io/kube-proxy:v1.25.13
      imageID: registry.k8s.io/kube-proxy@sha256:33fb089ff7671c9430af45d4ffdeba4dafbb65e9a5bf3dae348c63c6e1112279
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:47:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-12-18T17:47:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 1dcf112a73c9e72a923251d71ddaa9f7
      kubernetes.io/config.mirror: 1dcf112a73c9e72a923251d71ddaa9f7
      kubernetes.io/config.seen: "2023-12-18T17:47:38.170008003Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-12-18T17:47:38Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-datagen-1-25
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-25
      uid: 7328684d-1a35-4e18-a353-1ef9a9057101
    resourceVersion: "305"
    uid: 88e55def-9cb0-41a4-b63b-d45041e5a6f4
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      image: registry.k8s.io/kube-scheduler:v1.25.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://653bcccbcb47a30261207ff350fdcb18e0549396c9c4e0cd4fa922797924bd32
      image: registry.k8s.io/kube-scheduler:v1.25.13
      imageID: registry.k8s.io/kube-scheduler@sha256:ba8bbf046bce89180237ba73f17986a8b2be06d4e46d472861311378bdfd46b5
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:47:33Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-12-18T17:47:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:08Z"
    generateName: metrics-server-bc5dcdf-
    labels:
      k8s-app: metrics-server
      pod-template-hash: bc5dcdf
    name: metrics-server-bc5dcdf-h4zlp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-bc5dcdf
      uid: fcf37214-ec71-49dd-996c-d672610eee58
    resourceVersion: "434"
    uid: d7edc0f1-d75e-4fff-98a9-818041b4964a
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=60s
      - --kubelet-insecure-tls
      image: registry.k8s.io/metrics-server/metrics-server:v0.6.4@sha256:ee4304963fb035239bb5c5e8c10f2f38ee80efc16ecbdb9feb7213c17ae2e86e
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gbcz4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-gbcz4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad4df114856616dbee13304fbe167461a3da0d194a69d26388940bcec80a535e
      image: sha256:24087ab2d904727e386558a98b90f67b7a9d1cf74b3496b2d238af32484f1c19
      imageID: registry.k8s.io/metrics-server/metrics-server@sha256:ee4304963fb035239bb5c5e8c10f2f38ee80efc16ecbdb9feb7213c17ae2e86e
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:12Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2023-12-18T17:48:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2023-12-18T17:47:39Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "595"
    uid: ec7d3e96-3393-4588-b176-1d6d3e10a296
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4tcxg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-4tcxg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:47:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://54e8071b120a34d1ff901d119b1934f3c287156bfb26496acb3b9e146bfea095
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944
      lastState:
        terminated:
          containerID: containerd://cf7ab4ef3946a9c2906acb4670c9a6ece25b6ca0658e8e93900ad1f80b533263
          exitCode: 1
          finishedAt: "2023-12-18T17:48:21Z"
          reason: Error
          startedAt: "2023-12-18T17:47:51Z"
      name: storage-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:22Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-12-18T17:47:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-12-18T17:48:17Z"
    labels:
      app: creating
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: scraper
    resourceVersion: "848"
    uid: 1434ffac-7b0d-467f-9399-3eb8fba576ef
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bw6pb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bw6pb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:17Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:17Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f8a353ee254dc2661ea4b61218d8daf2ef669f1a048b32b0729f2a27eec2edcd
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:51b67269f354137895d43f3b3d810bfacd3945438e94dc5ac55fdac340352f48
      lastState:
        terminated:
          containerID: containerd://f8a353ee254dc2661ea4b61218d8daf2ef669f1a048b32b0729f2a27eec2edcd
          exitCode: 0
          finishedAt: "2023-12-18T17:49:16Z"
          reason: Completed
          startedAt: "2023-12-18T17:49:16Z"
      name: alpine
      ready: false
      restartCount: 2
      started: false
      state:
        waiting:
          message: back-off 20s restarting failed container=alpine pod=e2e-container-creating_scraper(1434ffac-7b0d-467f-9399-3eb8fba576ef)
          reason: CrashLoopBackOff
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: Guaranteed
    startTime: "2023-12-18T17:48:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-12-18T17:48:17Z"
    labels:
      app: pending
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-pending
    namespace: scraper
    resourceVersion: "480"
    uid: 53ccd72e-74c3-457a-b912-b1d66f109e25
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pzmq9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pzmq9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:17Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match Pod''s node affinity/selector.
        preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:49:00Z"
    generateName: e2e-cronjob-28382029-
    labels:
      app: cronjob
      controller-uid: 579ca553-64d5-4c52-8e50-6ee273a1d536
      job-name: e2e-cronjob-28382029
    name: e2e-cronjob-28382029-jjphk
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-28382029
      uid: 579ca553-64d5-4c52-8e50-6ee273a1d536
    resourceVersion: "836"
    uid: 8ca4b0d5-18a8-49d3-91fd-17382ade5f06
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - open(FH, '>', './pi.txt') or die "Cannot open file - $!"; print FH bpi(100);
        close(FH); print bpi(1500)
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 80m
          memory: 30Mi
        requests:
          cpu: 40m
          memory: 15Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9g2nm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9g2nm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:22Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:22Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c86896287cc9b1c6f47fca781d88aa3184fd472577212b4dbce263058db2bf7e
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c86896287cc9b1c6f47fca781d88aa3184fd472577212b4dbce263058db2bf7e
          exitCode: 0
          finishedAt: "2023-12-18T17:49:22Z"
          reason: Completed
          startedAt: "2023-12-18T17:49:03Z"
    hostIP: 192.168.49.2
    phase: Succeeded
    podIP: 10.244.0.16
    podIPs:
    - ip: 10.244.0.16
    qosClass: Burstable
    startTime: "2023-12-18T17:49:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:17Z"
    generateName: e2e-daemonset-
    labels:
      app: daemonset
      controller-revision-hash: 748c6d6fc
      pod-template-generation: "1"
    name: e2e-daemonset-gwjqv
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-daemonset
      uid: abf5d5d1-aa02-4ab4-b24f-4ef35ad47d8a
    resourceVersion: "741"
    uid: a671b9ca-aebf-456e-b3a0-dc785738cf1e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-25
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - while (true) { open(FH, '>', './pi.txt') or die "Cannot open file - $!"; print
        FH bpi(100); close(FH); print bpi(2700) }
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 80m
          memory: 30Mi
        requests:
          cpu: 40m
          memory: 15Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /output
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mglvz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: e2e-pv-claim
    - name: kube-api-access-mglvz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://45ac3bd9b75c2b990ad88fdb1e811477cc2a52181517480d0f6ab3f39afee3bf
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:58Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.11
    podIPs:
    - ip: 10.244.0.11
    qosClass: Burstable
    startTime: "2023-12-18T17:48:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-deployment-79cf866944-
    labels:
      app: deployment
      pod-template-hash: 79cf866944
    name: e2e-deployment-79cf866944-bwn4s
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-deployment-79cf866944
      uid: c394402a-d562-43c6-a99d-bbef0381a112
    resourceVersion: "745"
    uid: fde71826-734f-4282-82bd-fc56dde3718c
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - while (true) { open(FH, '>', './pi.txt') or die "Cannot open file - $!"; print
        FH bpi(100); close(FH); print bpi(2700) }
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 80m
          memory: 30Mi
        requests:
          cpu: 40m
          memory: 15Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /output
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w8b7w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: e2e-pv-claim
    - name: kube-api-access-w8b7w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3928a6b016f6f26cedc6b60c1f0579083d9b0f6c480f937a3fae7d0c59393ce4
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:59Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.12
    podIPs:
    - ip: 10.244.0.12
    qosClass: Burstable
    startTime: "2023-12-18T17:48:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-deployment-79cf866944-
    labels:
      app: deployment
      pod-template-hash: 79cf866944
    name: e2e-deployment-79cf866944-sx4b2
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-deployment-79cf866944
      uid: c394402a-d562-43c6-a99d-bbef0381a112
    resourceVersion: "714"
    uid: 92ab72bf-fd30-4f76-984f-be34df602868
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - while (true) { open(FH, '>', './pi.txt') or die "Cannot open file - $!"; print
        FH bpi(100); close(FH); print bpi(2700) }
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 80m
          memory: 30Mi
        requests:
          cpu: 40m
          memory: 15Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /output
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2m48m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: e2e-pv-claim
    - name: kube-api-access-2m48m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f9418e574fac0aefc3aad5c1703fbbb8b104d641ebe4ef717ea6d0ea196e4ff4
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:57Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.9
    podIPs:
    - ip: 10.244.0.9
    qosClass: Burstable
    startTime: "2023-12-18T17:48:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: afb5722d-61c9-4490-adf5-c598eb306d90
      job-name: e2e-failjob
    name: e2e-failjob-29x7j
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: afb5722d-61c9-4490-adf5-c598eb306d90
    resourceVersion: "674"
    uid: 30d4073e-ec9b-4afe-a32d-49e2d83e6c47
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j9clg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-j9clg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:40Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:40Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bc1ce27de21f41bac20062c9c735ba25b46daecf988fbbcc2f6d85649f3398f2
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:9e21bb4e3753afe899f2fcff86ffe18e82843d8cbee0647635f3cb01715aca5b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bc1ce27de21f41bac20062c9c735ba25b46daecf988fbbcc2f6d85649f3398f2
          exitCode: 42
          finishedAt: "2023-12-18T17:48:39Z"
          reason: Error
          startedAt: "2023-12-18T17:48:34Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: BestEffort
    startTime: "2023-12-18T17:48:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:49:11Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: afb5722d-61c9-4490-adf5-c598eb306d90
      job-name: e2e-failjob
    name: e2e-failjob-77c6d
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: afb5722d-61c9-4490-adf5-c598eb306d90
    resourceVersion: "827"
    uid: 2cab6b26-90c4-44f7-a880-8f5de27b9d41
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kr2gs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kr2gs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:17Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:17Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://18ed937eb56684a17dabde580d6d0515628d5dcd502b445b1635ea36d5d1b48c
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:9e21bb4e3753afe899f2fcff86ffe18e82843d8cbee0647635f3cb01715aca5b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://18ed937eb56684a17dabde580d6d0515628d5dcd502b445b1635ea36d5d1b48c
          exitCode: 42
          finishedAt: "2023-12-18T17:49:16Z"
          reason: Error
          startedAt: "2023-12-18T17:49:11Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.17
    podIPs:
    - ip: 10.244.0.17
    qosClass: BestEffort
    startTime: "2023-12-18T17:49:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:43Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: afb5722d-61c9-4490-adf5-c598eb306d90
      job-name: e2e-failjob
    name: e2e-failjob-d964v
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: afb5722d-61c9-4490-adf5-c598eb306d90
    resourceVersion: "796"
    uid: 4956f58d-62fe-44d4-b664-2b03107c6b7c
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h5vr9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-h5vr9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:49Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:49Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://04611cdeb6d05f54d3cfac08054dedd9bbd4dd8f618ed1f3fbb966dffdda5c1b
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:9e21bb4e3753afe899f2fcff86ffe18e82843d8cbee0647635f3cb01715aca5b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://04611cdeb6d05f54d3cfac08054dedd9bbd4dd8f618ed1f3fbb966dffdda5c1b
          exitCode: 42
          finishedAt: "2023-12-18T17:48:49Z"
          reason: Error
          startedAt: "2023-12-18T17:48:44Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.14
    podIPs:
    - ip: 10.244.0.14
    qosClass: BestEffort
    startTime: "2023-12-18T17:48:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:49:11Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: afb5722d-61c9-4490-adf5-c598eb306d90
      job-name: e2e-failjob
    name: e2e-failjob-snl25
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: afb5722d-61c9-4490-adf5-c598eb306d90
    resourceVersion: "826"
    uid: d6f04687-27f0-4297-b991-c538c7ea1fd0
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m55rw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-m55rw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:17Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:17Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:49:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d3346dd86b1b7811b3826ecddeb786855e57ef8906bfe1ab314646f383dc2fbc
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:9e21bb4e3753afe899f2fcff86ffe18e82843d8cbee0647635f3cb01715aca5b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d3346dd86b1b7811b3826ecddeb786855e57ef8906bfe1ab314646f383dc2fbc
          exitCode: 42
          finishedAt: "2023-12-18T17:49:16Z"
          reason: Error
          startedAt: "2023-12-18T17:49:11Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.18
    podIPs:
    - ip: 10.244.0.18
    qosClass: BestEffort
    startTime: "2023-12-18T17:49:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:43Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: afb5722d-61c9-4490-adf5-c598eb306d90
      job-name: e2e-failjob
    name: e2e-failjob-vxflj
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: afb5722d-61c9-4490-adf5-c598eb306d90
    resourceVersion: "797"
    uid: 656bdc43-ce0d-498b-a78e-ff81851caa21
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gwvjf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gwvjf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:49Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:49Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://17b78290cad00d8dd728fceb88c354aa758f67624190d613814ef1d66a7b9537
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:9e21bb4e3753afe899f2fcff86ffe18e82843d8cbee0647635f3cb01715aca5b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://17b78290cad00d8dd728fceb88c354aa758f67624190d613814ef1d66a7b9537
          exitCode: 42
          finishedAt: "2023-12-18T17:48:49Z"
          reason: Error
          startedAt: "2023-12-18T17:48:43Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.13
    podIPs:
    - ip: 10.244.0.13
    qosClass: BestEffort
    startTime: "2023-12-18T17:48:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: afb5722d-61c9-4490-adf5-c598eb306d90
      job-name: e2e-failjob
    name: e2e-failjob-xl9k7
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: afb5722d-61c9-4490-adf5-c598eb306d90
    resourceVersion: "682"
    uid: f23fa7c4-ff16-4d4e-a919-4a59e777cfd9
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jbztv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jbztv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:41Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:41Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3bbc320c6cd825718f6cecc5ef2f58655712983ca3e5f66ade6cae4c525da147
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:9e21bb4e3753afe899f2fcff86ffe18e82843d8cbee0647635f3cb01715aca5b
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3bbc320c6cd825718f6cecc5ef2f58655712983ca3e5f66ade6cae4c525da147
          exitCode: 42
          finishedAt: "2023-12-18T17:48:40Z"
          reason: Error
          startedAt: "2023-12-18T17:48:35Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: BestEffort
    startTime: "2023-12-18T17:48:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-hpa-84cf5db7cb-
    labels:
      app: hpa
      pod-template-hash: 84cf5db7cb
      run: php-apache
    name: e2e-hpa-84cf5db7cb-x86lg
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-84cf5db7cb
      uid: e21cf83b-f75a-4f4d-834c-dbc4a3791a89
    resourceVersion: "635"
    uid: b3a88392-c6d3-4519-a84f-27d91b37d7e0
  spec:
    containers:
    - image: registry.k8s.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rq689
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rq689
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b72f43d2bd94ea0afe44724de248631fba1b7c46e0519d74dcde2e4d9f36c184
      image: registry.k8s.io/hpa-example:latest
      imageID: registry.k8s.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:32Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: Burstable
    startTime: "2023-12-18T17:48:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-kube-state-metrics-6fd769c848-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.10.0
      helm.sh/chart: kube-state-metrics-5.12.1
      pod-template-hash: 6fd769c848
    name: e2e-kube-state-metrics-6fd769c848-2fdnz
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-kube-state-metrics-6fd769c848
      uid: 6f876de8-7ac3-491e-a11a-9b7856c52ba8
    resourceVersion: "618"
    uid: 97e0eab5-345b-4b4a-99f9-e162201ccf7c
  spec:
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rh7qz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: e2e-kube-state-metrics
    serviceAccountName: e2e-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rh7qz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5bf1fe6124a3e4ca1ac80e59873ba294bf45f0b4f91b1db3767e71d2e2c71c2d
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:ec5d6f6be2280212da0e55572b67d76f29c0342b3b6d24cc47b32d80ee3374a4
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:21Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: BestEffort
    startTime: "2023-12-18T17:48:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-scraper-7fcb557b5f-
    labels:
      app: scraper
      pod-template-hash: 7fcb557b5f
    name: e2e-scraper-7fcb557b5f-b927h
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-7fcb557b5f
      uid: 005e5096-4290-4f12-b694-422648961c93
    resourceVersion: "624"
    uid: 68f5f4e9-5ccc-40b7-ae38-ebff5ac85c6c
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v6rws
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-v6rws
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e049815c34a01713332b576c1a490a8c6791b90630af137aa14382bcd76f8d11
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:51b67269f354137895d43f3b3d810bfacd3945438e94dc5ac55fdac340352f48
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:23Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-12-18T17:48:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:18Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-548c485c75
      statefulset.kubernetes.io/pod-name: e2e-statefulset-0
    name: e2e-statefulset-0
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 236ad935-b020-4e28-bf08-be5a64d952f9
    resourceVersion: "722"
    uid: 2d5d9693-c9a3-4d59-8114-0f1606d47a8f
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - while (true) { open(FH, '>', './pi.txt') or die "Cannot open file - $!"; print
        FH bpi(100); close(FH); print bpi(2700) }
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 80m
          memory: 30Mi
        requests:
          cpu: 40m
          memory: 15Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /output
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xn6kz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-0
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: e2e-pv-claim
    - name: kube-api-access-xn6kz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d5c071b43cdea8020ad3f2215ca809a825420a0f42ebc51e2234abb05734b013
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:57Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.10
    podIPs:
    - ip: 10.244.0.10
    qosClass: Burstable
    startTime: "2023-12-18T17:48:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-18T17:48:58Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-548c485c75
      statefulset.kubernetes.io/pod-name: e2e-statefulset-1
    name: e2e-statefulset-1
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 236ad935-b020-4e28-bf08-be5a64d952f9
    resourceVersion: "756"
    uid: ab361e18-e119-4615-921e-705d9f847fa3
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - while (true) { open(FH, '>', './pi.txt') or die "Cannot open file - $!"; print
        FH bpi(100); close(FH); print bpi(2700) }
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 80m
          memory: 30Mi
        requests:
          cpu: 40m
          memory: 15Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /output
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xh2fl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-1
    nodeName: datagen-1-25
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: e2e-pv-claim
    - name: kube-api-access-xh2fl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-18T17:48:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2b9ec07ab6f93a61262d85f64cceffc82b4db04effd4fc38acfc26059866d5b5
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-18T17:48:59Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: Burstable
    startTime: "2023-12-18T17:48:58Z"
kind: List
metadata:
  resourceVersion: ""
