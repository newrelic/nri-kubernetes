apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:09Z"
    generateName: coredns-787d4945fb-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 787d4945fb
    name: coredns-787d4945fb-cl88p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-787d4945fb
      uid: 92504b0f-b518-4af8-9d2f-7af10b4bbdd2
    resourceVersion: "395"
    uid: 52acae86-3c58-48f4-9f71-5b988916bbe6
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h94b8
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: datagen-1-26
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-h94b8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d87cdf76f4b6578d50a1c8c1be75a336abf6f9cfb7b4212b88525d0b47777887
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imageID: registry.k8s.io/coredns/coredns@sha256:8e352a029d304ca7431c6507b56800636c321cb52289686a581ab70aaa8a2e2a
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:21:25Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2023-09-06T16:21:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: 87ef666059316caa364f1c5fc20414b0
      kubernetes.io/config.mirror: 87ef666059316caa364f1c5fc20414b0
      kubernetes.io/config.seen: "2023-09-06T16:20:56.684141509Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:20:57Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-datagen-1-26
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-26
      uid: 4024f402-e204-43a9-806d-329c973076f2
    resourceVersion: "302"
    uid: a1ef4f35-582a-4252-a5ac-83f0e6ca43c4
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=datagen-1-26=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=datagen-1-26
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.6-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://13a41b51d1f0140742e34b4fc7c9600a2f8885d4ff1945b84f4ab9f3592021e5
      image: registry.k8s.io/etcd:3.5.6-0
      imageID: registry.k8s.io/etcd@sha256:dd75ec974b0a2a6f6bb47001ba09207976e625db898d1b16735528c009cb171c
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:20:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:20:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:09Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 5d84575cfb
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-hjxbd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: f0148f5d-efc0-475d-98d5-65000130fc42
    resourceVersion: "381"
    uid: b95f0c0c-afa5-40cc-b630-d39ebdcc7dc5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-26
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9g297
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-9g297
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://adacb5f508d2732ff64d1002249d60fd45a2749fd7226e037830d7a7f23dbf6a
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imageID: docker.io/kindest/kindnetd@sha256:6c00e28db008c2afa67d9ee085c86184ec9ae5281d5ae1bd15006746fb9a1974
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:21:11Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Guaranteed
    startTime: "2023-09-06T16:21:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: 6f320a9979dba12cb5b61363b0b7968f
      kubernetes.io/config.mirror: 6f320a9979dba12cb5b61363b0b7968f
      kubernetes.io/config.seen: "2023-09-06T16:20:51.793279757Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:20:55Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-datagen-1-26
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-26
      uid: 4024f402-e204-43a9-806d-329c973076f2
    resourceVersion: "310"
    uid: 28b7c4cd-3c08-478b-a7a1-1b1e489ac854
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.26.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4350bdd027e85ad41231b18dc630bef53b437137d6ff5c7317308fac3c7db052
      image: registry.k8s.io/kube-apiserver:v1.26.8
      imageID: registry.k8s.io/kube-apiserver@sha256:76890c92962429e6d6b7aa286f73c5509bbcbdd99714750f58f19851ad2ca1f7
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:20:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:20:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: c058070dfb0c713f7c95c8f2d4e3d341
      kubernetes.io/config.mirror: c058070dfb0c713f7c95c8f2d4e3d341
      kubernetes.io/config.seen: "2023-09-06T16:20:51.793280507Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:20:55Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-datagen-1-26
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-26
      uid: 4024f402-e204-43a9-806d-329c973076f2
    resourceVersion: "303"
    uid: 29c633a4-1be1-4d3f-ba9e-dceea5a679b8
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.26.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9ac7b00ef5635d4dc0bd3dcf5d8e330065e4ee37a52ba54c54a7699d132998e0
      image: registry.k8s.io/kube-controller-manager:v1.26.8
      imageID: registry.k8s.io/kube-controller-manager@sha256:f469228e35fa47457acb11dcb98889833119e41a5d6c3497fe92dfe92952ec60
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:20:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:20:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:09Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 6446f764c4
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-cpvzm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 00325c00-081f-4bf8-997e-29a9ec71d4df
    resourceVersion: "379"
    uid: 221a2628-486a-4efa-ada1-faf0a22f2be2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-26
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.26.8
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rg9fm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-rg9fm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://edccbfaa335dd750b657d448d7bdf17ab09aa8a8d963c361e39e7eb6c72b70d7
      image: registry.k8s.io/kube-proxy:v1.26.8
      imageID: registry.k8s.io/kube-proxy@sha256:1372f588554064f8db671d2dc3fc3d588a0e2d326d867a5c76ecfbaf6a840717
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:21:10Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 3558dbb293c6761b903f4ac2144c1710
      kubernetes.io/config.mirror: 3558dbb293c6761b903f4ac2144c1710
      kubernetes.io/config.seen: "2023-09-06T16:20:56.684145468Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-09-06T16:20:56Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-datagen-1-26
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-26
      uid: 4024f402-e204-43a9-806d-329c973076f2
    resourceVersion: "306"
    uid: 09c80487-6039-4ec6-b295-1b12f78bf0bf
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      image: registry.k8s.io/kube-scheduler:v1.26.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:20:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://57866f63dbac0c31f24f547b25c5cd3099af4c6298f097f11c91803a037341a2
      image: registry.k8s.io/kube-scheduler:v1.26.8
      imageID: registry.k8s.io/kube-scheduler@sha256:9422b0a736b8840ac6881fc58ffb7c44b529ff3c8b4c9c394512718a937b6a3f
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:20:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-09-06T16:20:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:27Z"
    generateName: metrics-server-65df4d7f47-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 65df4d7f47
    name: metrics-server-65df4d7f47-99qqm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-65df4d7f47
      uid: f54fc2c0-4b88-4a44-929b-12a5e8ec5dd9
    resourceVersion: "439"
    uid: edd30380-1570-40eb-9f1d-2f14453ffe14
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=60s
      - --kubelet-insecure-tls
      image: registry.k8s.io/metrics-server/metrics-server:v0.6.4@sha256:ee4304963fb035239bb5c5e8c10f2f38ee80efc16ecbdb9feb7213c17ae2e86e
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djggr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-djggr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://edd6a7c9a501ebbd1becb913e07c5750026b964a164816bb7bcbe1245bb01b38
      image: sha256:24087ab2d904727e386558a98b90f67b7a9d1cf74b3496b2d238af32484f1c19
      imageID: registry.k8s.io/metrics-server/metrics-server@sha256:ee4304963fb035239bb5c5e8c10f2f38ee80efc16ecbdb9feb7213c17ae2e86e
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:21:32Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2023-09-06T16:21:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2023-09-06T16:20:57Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "604"
    uid: cc4855a0-2180-4cb5-8389-2982fcebf49e
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zrjlz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-zrjlz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://09b0074a0ba07ca9b872c1f5e2560d6b250c2f10f1ac08864ba2ee8d41231ea0
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: sha256:66749159455b3f08c8318fe0233122f54d0f5889f9c5fdfb73c3fd9d99895b51
      lastState:
        terminated:
          containerID: containerd://5527bd26f026a72008040c56ff09809b6bf18171409fe01719b79f4f28ca4f78
          exitCode: 1
          finishedAt: "2023-09-06T16:21:40Z"
          reason: Error
          startedAt: "2023-09-06T16:21:10Z"
      name: storage-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:21:40Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-09-06T16:21:36Z"
    labels:
      app: creating
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: scraper
    resourceVersion: "722"
    uid: 3c7359a5-7900-4d8d-aefb-1ebc2bbae5ba
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwjxb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dwjxb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://136bf988370a169c29ce7641f8285254d8891c7a314a7ce5c1c5d953e93aa8e2
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a
      lastState: {}
      name: alpine
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://136bf988370a169c29ce7641f8285254d8891c7a314a7ce5c1c5d953e93aa8e2
          exitCode: 0
          finishedAt: "2023-09-06T16:22:14Z"
          reason: Completed
          startedAt: "2023-09-06T16:22:14Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: Guaranteed
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-09-06T16:21:36Z"
    labels:
      app: pending
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-pending
    namespace: scraper
    resourceVersion: "489"
    uid: 6d84d1c3-8e32-41f5-bed2-9df990df5eb1
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dcwnt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dcwnt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match Pod''s node affinity/selector.
        preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:22:00Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-cronjob-28233622-
    labels:
      app: cronjob
      controller-uid: b40a7d25-9822-4195-8f18-0f6f967bb815
      job-name: e2e-cronjob-28233622
    name: e2e-cronjob-28233622-9zl75
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-28233622
      uid: b40a7d25-9822-4195-8f18-0f6f967bb815
    resourceVersion: "651"
    uid: 1f527a9f-8329-4e1f-9d85-eaaedd75bac4
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - print bpi(1500)
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 800m
          memory: 100Mi
        requests:
          cpu: 400m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v65rp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-v65rp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:00Z"
      message: 'containers with unready status: [compute-pi-digits]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:00Z"
      message: 'containers with unready status: [compute-pi-digits]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: perl:5.34.0
      imageID: ""
      lastState: {}
      name: compute-pi-digits
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: Burstable
    startTime: "2023-09-06T16:22:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-depl-5c48cbcb94-
    labels:
      app: deployment
      pod-template-hash: 5c48cbcb94
    name: e2e-depl-5c48cbcb94-r5w4w
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-5c48cbcb94
      uid: aab54e76-6f8f-4798-8795-559a770925dd
    resourceVersion: "711"
    uid: 647bca11-b5b8-49cc-88e7-4579a617b32b
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m5w6k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-m5w6k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f257637961ecb7c202720e3b8c0f463d283ba4f0ba66a52dc43e06e6fa1c991c
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:22:10Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.12
    podIPs:
    - ip: 10.244.0.12
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-depl-5c48cbcb94-
    labels:
      app: deployment
      pod-template-hash: 5c48cbcb94
    name: e2e-depl-5c48cbcb94-zf4n2
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-5c48cbcb94
      uid: aab54e76-6f8f-4798-8795-559a770925dd
    resourceVersion: "704"
    uid: 765c0fcf-6d68-46a8-86c9-fbd8f2c4a395
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2dd2s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-2dd2s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5b6b56ffa48b149c4e4ecac43832ebfba31559b020cecae480bd2f898d7eec0a
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:22:09Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.11
    podIPs:
    - ip: 10.244.0.11
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-ds-
    labels:
      app: daemonset
      controller-revision-hash: 58565bb997
      pod-template-generation: "1"
    name: e2e-ds-r5qxc
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-ds
      uid: f2f2b2e7-6904-42d2-8d2d-5a529b7e429a
    resourceVersion: "666"
    uid: ddfd129d-52b1-480c-96a6-b16a321ead0c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-26
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5vrf6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-5vrf6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae1659ccf9fb85754729e1b4c6bddd79926afa34cb3723b9fdbc44922d87426d
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:22:03Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:22:17Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
      job-name: e2e-failjob
    name: e2e-failjob-82gvz
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
    resourceVersion: "783"
    uid: ded78bd7-1901-45d6-84cf-35cb7c3e3704
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wcr2c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wcr2c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:23Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:23Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://34ea9242b34f93f4397016cd47e5aeca69cd15d0099d01319bcc94c412f3c674
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://34ea9242b34f93f4397016cd47e5aeca69cd15d0099d01319bcc94c412f3c674
          exitCode: 42
          finishedAt: "2023-09-06T16:22:22Z"
          reason: Error
          startedAt: "2023-09-06T16:22:17Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.16
    podIPs:
    - ip: 10.244.0.16
    qosClass: BestEffort
    startTime: "2023-09-06T16:22:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
      job-name: e2e-failjob
    name: e2e-failjob-9s8ct
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
    resourceVersion: "728"
    uid: 9c0f9585-0034-4ae2-bb21-ac83d92157ee
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnfgz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fnfgz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:12Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:12Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://614eaf7da38aff60ffe7713984c7be03ebef6a7afc31ae206c40a2687723f68c
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://614eaf7da38aff60ffe7713984c7be03ebef6a7afc31ae206c40a2687723f68c
          exitCode: 42
          finishedAt: "2023-09-06T16:22:11Z"
          reason: Error
          startedAt: "2023-09-06T16:22:06Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:22:15Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
      job-name: e2e-failjob
    name: e2e-failjob-fcbnk
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
    resourceVersion: "770"
    uid: 7e4770d3-aa59-4165-ad51-4ac78d844437
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jsdkc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jsdkc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:21Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:21Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e3b54319bcdec29ded321ee7a531066f6f8ed4e0893105f19363fea585c2a639
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e3b54319bcdec29ded321ee7a531066f6f8ed4e0893105f19363fea585c2a639
          exitCode: 42
          finishedAt: "2023-09-06T16:22:20Z"
          reason: Error
          startedAt: "2023-09-06T16:22:15Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: BestEffort
    startTime: "2023-09-06T16:22:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
      job-name: e2e-failjob
    name: e2e-failjob-nqmn2
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
    resourceVersion: "745"
    uid: 24e0fede-a6e6-4d91-8b4e-a4bc1489d2ad
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w46hp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w46hp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:14Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:14Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cd354711ce2e7d3ad1a18541aa8410df9ba4c118bc2ffe135f25a9fb633a6135
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cd354711ce2e7d3ad1a18541aa8410df9ba4c118bc2ffe135f25a9fb633a6135
          exitCode: 42
          finishedAt: "2023-09-06T16:22:13Z"
          reason: Error
          startedAt: "2023-09-06T16:22:08Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.10
    podIPs:
    - ip: 10.244.0.10
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:22:25Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
      job-name: e2e-failjob
    name: e2e-failjob-ssshw
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
    resourceVersion: "805"
    uid: 05f14be6-c278-49c5-b320-857b848d6bd8
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6rpbf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6rpbf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:31Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:31Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://84b59ddf7e42ddd1ce9aa30069307834e03f5fad34801d4e40bb4c8b30f5c37d
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://84b59ddf7e42ddd1ce9aa30069307834e03f5fad34801d4e40bb4c8b30f5c37d
          exitCode: 42
          finishedAt: "2023-09-06T16:22:30Z"
          reason: Error
          startedAt: "2023-09-06T16:22:25Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.18
    podIPs:
    - ip: 10.244.0.18
    qosClass: BestEffort
    startTime: "2023-09-06T16:22:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:22:24Z"
    finalizers:
    - batch.kubernetes.io/job-tracking
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
      job-name: e2e-failjob
    name: e2e-failjob-zggvw
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f3eb98b8-8a09-42e4-9edb-baf4038c1c0f
    resourceVersion: "804"
    uid: 5190a512-179e-46ad-8be3-3463d8f7731a
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9v6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-v9v6p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:30Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:30Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad7fa6c6762e4651c6f5def80b13407581376c6b0ec46f72567cb7f6636ad574
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ad7fa6c6762e4651c6f5def80b13407581376c6b0ec46f72567cb7f6636ad574
          exitCode: 42
          finishedAt: "2023-09-06T16:22:29Z"
          reason: Error
          startedAt: "2023-09-06T16:22:24Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.17
    podIPs:
    - ip: 10.244.0.17
    qosClass: BestEffort
    startTime: "2023-09-06T16:22:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-hpa-645b6469b6-
    labels:
      app: hpa
      pod-template-hash: 645b6469b6
      run: php-apache
    name: e2e-hpa-645b6469b6-rlvpj
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-645b6469b6
      uid: 45944e9f-d0fb-414c-ab56-183150512cb9
    resourceVersion: "657"
    uid: 5afae68e-bc77-4265-a7b6-67c1e29d0467
  spec:
    containers:
    - image: registry.k8s.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nv2qm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nv2qm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://08bb988c7bd3274b83adc5434a69186a32f6e528102d9bf4b8969bd870b3a32b
      image: registry.k8s.io/hpa-example:latest
      imageID: registry.k8s.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:22:01Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: Burstable
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-kube-state-metrics-85c747cf7d-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.10.0
      helm.sh/chart: kube-state-metrics-5.12.1
      pod-template-hash: 85c747cf7d
    name: e2e-kube-state-metrics-85c747cf7d-jwnb6
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-kube-state-metrics-85c747cf7d
      uid: d2ebfa5a-f5f4-44cd-9deb-3d9701cbd6e1
    resourceVersion: "624"
    uid: abcd64f5-d93a-48f3-9d17-a12f15ca8c77
  spec:
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4l4wg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: e2e-kube-state-metrics
    serviceAccountName: e2e-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4l4wg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7f1f2bfeb4a2b583c113e20b1b196b5cf432452b83e7b99ccca0e3f2aa86813d
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:ec5d6f6be2280212da0e55572b67d76f29c0342b3b6d24cc47b32d80ee3374a4
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:21:42Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-scraper-9894765bf-
    labels:
      app: scraper
      pod-template-hash: 9894765bf
    name: e2e-scraper-9894765bf-h4dzf
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-9894765bf
      uid: 9cc6ef3a-7cc3-4608-a225-205fbafca299
    resourceVersion: "590"
    uid: 911274d4-bf7a-480e-b0df-186e568eedce
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pvknb
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pvknb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1d8c08f6e0927e0f607a07b4155b5a3831fffda4e45915016dbd962032eb399f
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:21:39Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:21:36Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-0
    name: e2e-statefulset-0
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: ca68375b-6317-4791-9325-b64ea5ff5adf
    resourceVersion: "682"
    uid: 29c833e5-b13d-4007-b8a8-9035d733642b
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ksvqb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-0
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-ksvqb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:21:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://38a87d6e47444e2fa3cf1916e2d3d52184d8df21cb3e947c55bb4f226a965def
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-09-06T16:22:07Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.9
    podIPs:
    - ip: 10.244.0.9
    qosClass: BestEffort
    startTime: "2023-09-06T16:21:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-09-06T16:22:08Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-1
    name: e2e-statefulset-1
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: ca68375b-6317-4791-9325-b64ea5ff5adf
    resourceVersion: "692"
    uid: 5fb226be-b8ea-4710-8769-9597799cdc64
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9c6g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-1
    nodeName: datagen-1-26
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-v9c6g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:08Z"
      message: 'containers with unready status: [busybox]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:08Z"
      message: 'containers with unready status: [busybox]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-09-06T16:22:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: busybox
      imageID: ""
      lastState: {}
      name: busybox
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: BestEffort
    startTime: "2023-09-06T16:22:08Z"
kind: List
metadata:
  resourceVersion: ""
