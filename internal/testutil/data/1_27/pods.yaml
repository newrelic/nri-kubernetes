apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:19Z"
    generateName: coredns-5d78c9869d-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5d78c9869d
    name: coredns-5d78c9869d-wlwv4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-5d78c9869d
      uid: c618728e-c437-4ede-8f78-95264f453ed8
    resourceVersion: "395"
    uid: 57d01452-51ec-4cad-a920-004f87c5f0e1
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tf5qz
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: datagen-1-27
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-tf5qz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ca3ab81cc1c7e42e815033b8a5dded134c9b82efcf4e748d3d49202ba68944bf
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imageID: registry.k8s.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:31Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2023-08-10T05:12:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.58.2:2379
      kubernetes.io/config.hash: 843333ece65aaab486712cfd0a6b1a48
      kubernetes.io/config.mirror: 843333ece65aaab486712cfd0a6b1a48
      kubernetes.io/config.seen: "2023-08-10T05:12:05.668221300Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-08-10T05:12:05Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-datagen-1-27
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-27
      uid: e35c7d05-6032-432f-bcd0-028a790def80
    resourceVersion: "284"
    uid: c8bd7bd3-a842-45e5-824a-3cd173d06e63
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.58.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.58.2:2380
      - --initial-cluster=datagen-1-27=https://192.168.58.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.58.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.58.2:2380
      - --name=datagen-1-27
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.7-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f1c02fa749226f7e488b3bd0b88046826b8d009c4df8ba3a6175ecf9b67b3eed
      image: registry.k8s.io/etcd:3.5.7-0
      imageID: registry.k8s.io/etcd@sha256:51eae8381dcb1078289fa7b4f3df2630cdc18d09fb56f8e56b41c40e191d6c83
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:00Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: Burstable
    startTime: "2023-08-10T05:12:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:19Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 575d9d6996
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-95vws
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: ae5305a4-0143-496e-9328-7302af4f7bac
    resourceVersion: "381"
    uid: 987ab740-da7b-4199-811a-af47f0ffda44
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-27
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-crlft
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-crlft
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://397ae9de4ea16606bca7582e688eaf5e0992146d5b7088dba5da75bf392b6b37
      image: docker.io/kindest/kindnetd:v20230511-dc714da8
      imageID: docker.io/kindest/kindnetd@sha256:6c00e28db008c2afa67d9ee085c86184ec9ae5281d5ae1bd15006746fb9a1974
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:24Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: Guaranteed
    startTime: "2023-08-10T05:12:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.58.2:8443
      kubernetes.io/config.hash: de81c94677ab5a3444edf8c775fc6950
      kubernetes.io/config.mirror: de81c94677ab5a3444edf8c775fc6950
      kubernetes.io/config.seen: "2023-08-10T05:12:00.292148589Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-08-10T05:12:04Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-datagen-1-27
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-27
      uid: e35c7d05-6032-432f-bcd0-028a790def80
    resourceVersion: "268"
    uid: 1c984e66-8922-4250-b8b4-cbfcd0f75a71
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.58.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.58.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.58.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.58.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://aa23b5d22fe2559fa975edefe24de7a2cd5287dc844e7640b193a1d8e4094643
      image: registry.k8s.io/kube-apiserver:v1.27.0
      imageID: registry.k8s.io/kube-apiserver@sha256:89b8d9dbef2b905b7d028ca8b7f79d35ebd9baa66b0a3ee2ddd4f3e0e2804b45
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:00Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: Burstable
    startTime: "2023-08-10T05:12:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 2e2d0d3d4ce08e96c387ebfd0d6f3062
      kubernetes.io/config.mirror: 2e2d0d3d4ce08e96c387ebfd0d6f3062
      kubernetes.io/config.seen: "2023-08-10T05:12:05.668225175Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-08-10T05:12:05Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-datagen-1-27
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-27
      uid: e35c7d05-6032-432f-bcd0-028a790def80
    resourceVersion: "288"
    uid: c5a987d9-f619-4a31-813f-c27f92ca6741
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8a4afaffdd09684e594544e35f9a1d6ffffff4f8dbde3ba274dde59a281267a6
      image: registry.k8s.io/kube-controller-manager:v1.27.0
      imageID: registry.k8s.io/kube-controller-manager@sha256:ddcd5cd96a3fbb109515a303c93cd245568311febc649a86c66caa4f05202aa7
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:00Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: Burstable
    startTime: "2023-08-10T05:12:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:19Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 7b6c5596fc
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-g8xq9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 3ead8f0d-e260-47e0-bea2-e5f798ed366c
    resourceVersion: "371"
    uid: f3cbc90a-5155-44fa-b790-9fdb9472e8ed
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-27
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.27.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2n8k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-x2n8k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5688d4132d4d2782500e3f6aaed541e726f0a0efd32705465f89adcc02f1a7e6
      image: registry.k8s.io/kube-proxy:v1.27.0
      imageID: registry.k8s.io/kube-proxy@sha256:a08d09f394e20e78ad47b0060797652865f9f01eb5ee04b07b6526a66d0df7df
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:20Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 198c5deb9eab40d1a0f63000469b51bf
      kubernetes.io/config.mirror: 198c5deb9eab40d1a0f63000469b51bf
      kubernetes.io/config.seen: "2023-08-10T05:12:05.668225633Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-08-10T05:12:05Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-datagen-1-27
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-27
      uid: e35c7d05-6032-432f-bcd0-028a790def80
    resourceVersion: "265"
    uid: d88f1113-18e2-4077-a223-9b0762f53d10
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      image: registry.k8s.io/kube-scheduler:v1.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a33ffba6347daa86e1635a2d9ba8ca45cb5ebc2de3ef8cf35d081e66645185c9
      image: registry.k8s.io/kube-scheduler:v1.27.0
      imageID: registry.k8s.io/kube-scheduler@sha256:939d0c6675c373639f53f05d61b5035172f95afb47ecffee6baf4e3d70543b66
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:00Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: Burstable
    startTime: "2023-08-10T05:12:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:33Z"
    generateName: metrics-server-844d8db974-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 844d8db974
    name: metrics-server-844d8db974-gn4p8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-844d8db974
      uid: 589fd81b-d0bf-476a-a90e-d7a63de57c98
    resourceVersion: "456"
    uid: e97dec98-b035-4509-94cf-02b04c3583cf
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=60s
      - --kubelet-insecure-tls
      image: registry.k8s.io/metrics-server/metrics-server:v0.6.3@sha256:c60778fa1c44d0c5a0c4530ebe83f9243ee6fc02f4c3dc59226c201931350b10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nktr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-6nktr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5f2d01a70c7ca6d389780f92e5c184fbccded9fb388aeee4d2b78b0446fe9303
      image: sha256:8e22bf689cda7eb34081c7bed8d3c97fac366b3d9b60c829a6719249f4684cd8
      imageID: registry.k8s.io/metrics-server/metrics-server@sha256:c60778fa1c44d0c5a0c4530ebe83f9243ee6fc02f4c3dc59226c201931350b10
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:46Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2023-08-10T05:12:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2023-08-10T05:12:07Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "373"
    uid: 619f30c4-a990-4268-b5a1-2eb202e3e691
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kps77
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-kps77
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9a213701b3edb95f1b4503ed7565dff53ab5376e74317151ebf1f7058b091a99
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944
      lastState: {}
      name: storage-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:20Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-08-10T05:12:51Z"
    labels:
      app: creating
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: scraper
    resourceVersion: "882"
    uid: 8819b1ae-1076-4de7-a017-b50cbdcd7643
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7s82h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7s82h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c61035606c9e471477063e0239ad558eebf83308487c08165d41772cc6609651
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a
      lastState:
        terminated:
          containerID: containerd://c61035606c9e471477063e0239ad558eebf83308487c08165d41772cc6609651
          exitCode: 0
          finishedAt: "2023-08-10T05:14:12Z"
          reason: Completed
          startedAt: "2023-08-10T05:14:12Z"
      name: alpine
      ready: false
      restartCount: 2
      started: false
      state:
        waiting:
          message: back-off 20s restarting failed container=alpine pod=e2e-container-creating_scraper(8819b1ae-1076-4de7-a017-b50cbdcd7643)
          reason: CrashLoopBackOff
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: Guaranteed
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-08-10T05:12:51Z"
    labels:
      app: pending
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-pending
    namespace: scraper
    resourceVersion: "508"
    uid: 51be29c5-0775-4c70-9153-6282ea2dfe30
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bxj2p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bxj2p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match Pod''s node affinity/selector.
        preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:13:00Z"
    generateName: e2e-cronjob-28194073-
    labels:
      app: cronjob
      batch.kubernetes.io/controller-uid: 187d361d-1eaf-4b8a-9fef-2f26628146fc
      batch.kubernetes.io/job-name: e2e-cronjob-28194073
      controller-uid: 187d361d-1eaf-4b8a-9fef-2f26628146fc
      job-name: e2e-cronjob-28194073
    name: e2e-cronjob-28194073-tjtkg
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-28194073
      uid: 187d361d-1eaf-4b8a-9fef-2f26628146fc
    resourceVersion: "823"
    uid: 188ddf9f-c61a-4fb4-9a14-d1422f36a1dd
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - print bpi(1500)
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 800m
          memory: 100Mi
        requests:
          cpu: 400m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rczpm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rczpm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://47fad7e648d67aa1e550850a28800dcecf3899057f1a1c78f3c1b163ff11ae5b
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://47fad7e648d67aa1e550850a28800dcecf3899057f1a1c78f3c1b163ff11ae5b
          exitCode: 0
          finishedAt: "2023-08-10T05:13:54Z"
          reason: Completed
          startedAt: "2023-08-10T05:13:52Z"
    hostIP: 192.168.58.2
    phase: Succeeded
    podIP: 10.244.0.13
    podIPs:
    - ip: 10.244.0.13
    qosClass: Burstable
    startTime: "2023-08-10T05:13:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:14:00Z"
    generateName: e2e-cronjob-28194074-
    labels:
      app: cronjob
      batch.kubernetes.io/controller-uid: 37caa1df-f9c9-46d5-ab88-143d255b6751
      batch.kubernetes.io/job-name: e2e-cronjob-28194074
      controller-uid: 37caa1df-f9c9-46d5-ab88-143d255b6751
      job-name: e2e-cronjob-28194074
    name: e2e-cronjob-28194074-t2vdz
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-28194074
      uid: 37caa1df-f9c9-46d5-ab88-143d255b6751
    resourceVersion: "854"
    uid: 457f193b-ee38-4d02-b8f9-c43a8054f46f
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - print bpi(1500)
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 800m
          memory: 100Mi
        requests:
          cpu: 400m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-54fjf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-54fjf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:14:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:14:03Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:14:03Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:14:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://220b4cf6d39888aa6c5296942d3f12b932261e3fc1e2467490803d4c17eeecd9
      image: docker.io/library/perl:5.34.0
      imageID: docker.io/library/perl@sha256:2584f46a92d1042b25320131219e5832c5b3e75086dfaaff33e4fda7a9f47d99
      lastState: {}
      name: compute-pi-digits
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://220b4cf6d39888aa6c5296942d3f12b932261e3fc1e2467490803d4c17eeecd9
          exitCode: 0
          finishedAt: "2023-08-10T05:14:02Z"
          reason: Completed
          startedAt: "2023-08-10T05:14:00Z"
    hostIP: 192.168.58.2
    phase: Succeeded
    podIP: 10.244.0.17
    podIPs:
    - ip: 10.244.0.17
    qosClass: Burstable
    startTime: "2023-08-10T05:14:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-depl-5674df74f6-
    labels:
      app: deployment
      pod-template-hash: 5674df74f6
    name: e2e-depl-5674df74f6-8n7kx
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-5674df74f6
      uid: c0530dcb-e464-414a-afb3-927e5a28ad41
    resourceVersion: "649"
    uid: 396d546c-b9cf-4f57-b7e4-9d256502c1ab
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-psbwd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-psbwd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a7e626ed7d4c46796f4f19f48d4635d3c43072b7b584d2fe89ba0728bf034e99
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:13:02Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-depl-5674df74f6-
    labels:
      app: deployment
      pod-template-hash: 5674df74f6
    name: e2e-depl-5674df74f6-q99m5
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-5674df74f6
      uid: c0530dcb-e464-414a-afb3-927e5a28ad41
    resourceVersion: "655"
    uid: 14ecc8b5-58ef-488a-a181-c1b18998c1d4
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wnbbd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-wnbbd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://30fa8692609f82de96e58e6f9c0a17a9bab22fcd03ee737866f1e1bdba3567ef
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:13:03Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-ds-
    labels:
      app: daemonset
      controller-revision-hash: 77c98f5dd7
      pod-template-generation: "1"
    name: e2e-ds-bk5cx
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-ds
      uid: 74121a99-fdc1-4cca-9d1c-4a04054bb7ac
    resourceVersion: "615"
    uid: 38e2577d-3a60-436a-9aac-2b37f66e3af2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-27
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rl8v7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-rl8v7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://260f80b0eea989670e06ef5f69568a53ec6b144af7eeb9f38f4b65afa236f098
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:55Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      batch.kubernetes.io/controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      batch.kubernetes.io/job-name: e2e-failjob
      controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      job-name: e2e-failjob
    name: e2e-failjob-2vc5p
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
    resourceVersion: "706"
    uid: 00d25bd7-28cb-407b-a03f-871a0f2b0504
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dvbmd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dvbmd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:11Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:11Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://09e31ed774d815a93be0df6998d7600f7f6aa96b4b95503571122aa8978e0eec
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://09e31ed774d815a93be0df6998d7600f7f6aa96b4b95503571122aa8978e0eec
          exitCode: 42
          finishedAt: "2023-08-10T05:13:11Z"
          reason: Error
          startedAt: "2023-08-10T05:13:06Z"
    hostIP: 192.168.58.2
    phase: Failed
    podIP: 10.244.0.10
    podIPs:
    - ip: 10.244.0.10
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      batch.kubernetes.io/controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      batch.kubernetes.io/job-name: e2e-failjob
      controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      job-name: e2e-failjob
    name: e2e-failjob-5qqbn
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
    resourceVersion: "714"
    uid: a629239d-3464-42f1-82f3-4063e3782e50
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kzp5l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kzp5l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:13Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:13Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fa24275beaba2dc4a5d850e3a3c2bc191fcab58a5de011513f9bbba9531a0290
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fa24275beaba2dc4a5d850e3a3c2bc191fcab58a5de011513f9bbba9531a0290
          exitCode: 42
          finishedAt: "2023-08-10T05:13:13Z"
          reason: Error
          startedAt: "2023-08-10T05:13:08Z"
    hostIP: 192.168.58.2
    phase: Failed
    podIP: 10.244.0.11
    podIPs:
    - ip: 10.244.0.11
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:13:33Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      batch.kubernetes.io/controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      batch.kubernetes.io/job-name: e2e-failjob
      controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      job-name: e2e-failjob
    name: e2e-failjob-kpw4z
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
    resourceVersion: "783"
    uid: 4211f216-12f2-4ec6-8568-e849bb103cc6
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8dcf9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8dcf9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:39Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:39Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bb31586ec373445a9a684ce31b15614aa8fdb95559719cd6e90cdc9bb43098aa
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bb31586ec373445a9a684ce31b15614aa8fdb95559719cd6e90cdc9bb43098aa
          exitCode: 42
          finishedAt: "2023-08-10T05:13:38Z"
          reason: Error
          startedAt: "2023-08-10T05:13:33Z"
    hostIP: 192.168.58.2
    phase: Failed
    podIP: 10.244.0.16
    podIPs:
    - ip: 10.244.0.16
    qosClass: BestEffort
    startTime: "2023-08-10T05:13:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:13:33Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      batch.kubernetes.io/controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      batch.kubernetes.io/job-name: e2e-failjob
      controller-uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
      job-name: e2e-failjob
    name: e2e-failjob-sl8z9
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: f248f856-41dd-4651-8bf2-b11e37b89d6e
    resourceVersion: "782"
    uid: f0e5b8c0-8bfa-4d2e-87d7-1cc5ef94fca5
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tcbs6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tcbs6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:39Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:39Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6418f692a89ccb5527c6cee62130518c14b07b4995625c21a7778629d4726d5f
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6418f692a89ccb5527c6cee62130518c14b07b4995625c21a7778629d4726d5f
          exitCode: 42
          finishedAt: "2023-08-10T05:13:38Z"
          reason: Error
          startedAt: "2023-08-10T05:13:33Z"
    hostIP: 192.168.58.2
    phase: Failed
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: BestEffort
    startTime: "2023-08-10T05:13:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-hpa-78585f866d-
    labels:
      app: hpa
      pod-template-hash: 78585f866d
      run: php-apache
    name: e2e-hpa-78585f866d-7pgnv
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-78585f866d
      uid: 9c92a701-c4be-4d09-a9a5-9a52ecb87a07
    resourceVersion: "730"
    uid: 938826e3-2af5-4d43-b6c5-50c4985f52c3
  spec:
    containers:
    - image: registry.k8s.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svxzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-svxzv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://103c9b6ffff4a7c5073dcee6dd8c1512ba8fd1be956ff4be4d91018581205fa2
      image: registry.k8s.io/hpa-example:latest
      imageID: registry.k8s.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:13:26Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.12
    podIPs:
    - ip: 10.244.0.12
    qosClass: Burstable
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-kube-state-metrics-65bf66cb8b-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.6.0
      helm.sh/chart: kube-state-metrics-4.23.0
      pod-template-hash: 65bf66cb8b
    name: e2e-kube-state-metrics-65bf66cb8b-pww52
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-kube-state-metrics-65bf66cb8b
      uid: e533a4e3-b262-4b38-a78d-b4c8a562f9c7
    resourceVersion: "694"
    uid: 76d7e430-63f5-48bf-97ae-5cafe10a88fa
  spec:
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4blpc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: e2e-kube-state-metrics
    serviceAccountName: e2e-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4blpc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f79b4ab9a0d9fd58009f9569dd60e528a4a67e1cc58e8163569931606a433bd4
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.2
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:ec5732e28f151de3847df60f48c5a570aacdb692ff1ce949d97105ae5e5a6722
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:13:01Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-scraper-694b5768ff-
    labels:
      app: scraper
      pod-template-hash: 694b5768ff
    name: e2e-scraper-694b5768ff-5nrmq
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-694b5768ff
      uid: 12ba8238-0459-43c9-8f36-4caac4668c8c
    resourceVersion: "625"
    uid: 6e8d4cab-08c1-44ed-950c-5eafbaac1f47
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9w7lw
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9w7lw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://424656c818796466fb75b0210b084fae4f49426eb98fab5937322b5fd50c389c
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:12:58Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 192.168.58.2
    podIPs:
    - ip: 192.168.58.2
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:12:51Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-0
    name: e2e-statefulset-0
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 9f502e6d-a047-49fa-8ca6-a15e54d79f56
    resourceVersion: "672"
    uid: e5c8b3db-f507-4fed-b466-b337e6a2af2a
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ltkr2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-0
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-ltkr2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:12:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c18469d32d7c25e387f81aeacbc78eeea6a13d86aa783d519d795892eb8bc213
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:13:06Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.9
    podIPs:
    - ip: 10.244.0.9
    qosClass: BestEffort
    startTime: "2023-08-10T05:12:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-08-10T05:13:06Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-1
    name: e2e-statefulset-1
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 9f502e6d-a047-49fa-8ca6-a15e54d79f56
    resourceVersion: "803"
    uid: 1cb067f7-481c-46c5-bb04-14ea9aca0b0d
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qwpb7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-1
    nodeName: datagen-1-27
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-qwpb7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-08-10T05:13:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2431c1ed24c26eb6265b9524c53b00f21da0eeee213475c8430e40af98319542
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-08-10T05:13:53Z"
    hostIP: 192.168.58.2
    phase: Running
    podIP: 10.244.0.14
    podIPs:
    - ip: 10.244.0.14
    qosClass: BestEffort
    startTime: "2023-08-10T05:13:06Z"
kind: List
metadata:
  resourceVersion: ""
