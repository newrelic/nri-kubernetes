apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:42:11Z"
    generateName: coredns-f9fd979d6-
    labels:
      k8s-app: kube-dns
      pod-template-hash: f9fd979d6
    name: coredns-f9fd979d6-dcgv7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-f9fd979d6
      uid: 3b2f3d18-4717-4ab9-ac68-4c7aab44cef1
    resourceVersion: "429"
    selfLink: /api/v1/namespaces/kube-system/pods/coredns-f9fd979d6-dcgv7
    uid: 279c76e4-0f1f-4a9c-9ed3-949dd342b948
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns:1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-trqth
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: coredns-token-trqth
      secret:
        defaultMode: 420
        secretName: coredns-token-trqth
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b0972a6c39765ee466f5c79e00bbbf38fc47dcd289828dd7184d37d817ce35b8
      image: k8s.gcr.io/coredns:1.7.0
      imageID: k8s.gcr.io/coredns@sha256:73ca82b4ce829766d4f1f10947c3a338888f876fbed0540dc849c89ff256e90c
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:42:38Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2023-03-06T22:42:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: d186e6390814d4dd7e770f47c08e98a2
      kubernetes.io/config.mirror: d186e6390814d4dd7e770f47c08e98a2
      kubernetes.io/config.seen: "2023-03-06T22:42:02.100905563Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-03-06T22:42:02Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0166d122-a171-4467-b35a-dd260033867a
    resourceVersion: "468"
    selfLink: /api/v1/namespaces/kube-system/pods/etcd-minikube
    uid: 3f26a5a4-9913-4982-8306-e1a048dbcf84
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=minikube=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=minikube
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: k8s.gcr.io/etcd:3.4.13-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources: {}
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a433712d156faf65c55a70557b33b97daf699bcba0a29811451e337138f76514
      image: k8s.gcr.io/etcd:3.4.13-0
      imageID: k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:41:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-03-06T22:42:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:42:11Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: dc9f9d68d
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-xvks7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: 37a4fb50-97fa-4cd3-9259-6aed95bf4f93
    resourceVersion: "397"
    selfLink: /api/v1/namespaces/kube-system/pods/kindnet-xvks7
    uid: b21378fd-427d-40ae-9f94-0f09d496ce6c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      image: kindest/kindnetd:v20221004-44d545d1
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kindnet-token-jswsn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.mk
        type: DirectoryOrCreate
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kindnet-token-jswsn
      secret:
        defaultMode: 420
        secretName: kindnet-token-jswsn
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://91109cc002f88f1ac9f06cd4d3c3556d466c41b07dabd6f693fe22e8a82db081
      image: docker.io/kindest/kindnetd:v20221004-44d545d1
      imageID: docker.io/kindest/kindnetd@sha256:273469d84ede51824194a31f6a405e3d3686b8b87cd161ea40f6bc3ff8e04ffe
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:42:20Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Guaranteed
    startTime: "2023-03-06T22:42:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: 90db0dc6be1a261eb80321226ce10e8b
      kubernetes.io/config.mirror: 90db0dc6be1a261eb80321226ce10e8b
      kubernetes.io/config.seen: "2023-03-06T22:42:02.100911063Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-03-06T22:42:02Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0166d122-a171-4467-b35a-dd260033867a
    resourceVersion: "388"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-apiserver-minikube
    uid: a419c77f-802e-400a-aa2c-35a16fe55c71
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --insecure-port=0
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: k8s.gcr.io/kube-apiserver:v1.19.16
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://99dd515fcea7d33ad86d16310c2f255f969deb601a3d2918ab25a991cba6378d
      image: k8s.gcr.io/kube-apiserver:v1.19.16
      imageID: k8s.gcr.io/kube-apiserver@sha256:2cad6a4cae1713e720e00e1a1c7ef7644777fe111e0b7cbed5f50adb8a3cdf30
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:41:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-03-06T22:42:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d066eacd240995c42fa187b900a52115
      kubernetes.io/config.mirror: d066eacd240995c42fa187b900a52115
      kubernetes.io/config.seen: "2023-03-06T22:42:02.100912467Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-03-06T22:42:02Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0166d122-a171-4467-b35a-dd260033867a
    resourceVersion: "451"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-controller-manager-minikube
    uid: 5b68a303-4ad9-4f96-81e3-6296df8df8d0
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --node-cidr-mask-size=24
      - --port=0
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.19.16
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7e01d96e331bcb3013f9e25585630bac74d90b1d781cf6ee35da65f6edb4e352
      image: k8s.gcr.io/kube-controller-manager:v1.19.16
      imageID: k8s.gcr.io/kube-controller-manager@sha256:1d42f7d017f4ceeff46afb9cedd47b2b8140d1f2cc3bfebb57a40c3760acd482
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:41:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-03-06T22:42:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:42:11Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 58b779b57f
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-46dmr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1bdffd5b-70c6-4055-9a6e-c71a0df1ad5b
    resourceVersion: "391"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-46dmr
    uid: 547047da-141f-49b1-9ec5-7f0ff7cf7509
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.19.16
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-proxy-token-wp4wl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-proxy-token-wp4wl
      secret:
        defaultMode: 420
        secretName: kube-proxy-token-wp4wl
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://acc2c0865bbecad1ce1bcfc9c30a59260e490e22f665f51fd3bd5e5b3cea4572
      image: k8s.gcr.io/kube-proxy:v1.19.16
      imageID: k8s.gcr.io/kube-proxy@sha256:092f9526686d27964d17be772c42cde086690209cc8aea10c49991456eb879c2
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:42:12Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-03-06T22:42:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 15aa95cd372cdc95f502c15bb9e343a7
      kubernetes.io/config.mirror: 15aa95cd372cdc95f502c15bb9e343a7
      kubernetes.io/config.seen: "2023-03-06T22:42:02.100913620Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-03-06T22:42:02Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0166d122-a171-4467-b35a-dd260033867a
    resourceVersion: "461"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-scheduler-minikube
    uid: e839f907-9b07-4ce8-9230-81e36b86bd37
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      - --port=0
      image: k8s.gcr.io/kube-scheduler:v1.19.16
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4cb631f2ed1276584c292d311db600f678a9b8233d92463ca28e26f53f405f89
      image: k8s.gcr.io/kube-scheduler:v1.19.16
      imageID: k8s.gcr.io/kube-scheduler@sha256:1a335251eaef4e209d5757da0bf5499ecdce6e65413f7cb92ff4cc633d6fc7dd
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:41:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-03-06T22:42:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:43:50Z"
    generateName: metrics-server-7f7b77f87c-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7f7b77f87c
    name: metrics-server-7f7b77f87c-798fc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7f7b77f87c
      uid: 15d96a9c-c0e5-4fcf-947e-0818c5b03f84
    resourceVersion: "905"
    selfLink: /api/v1/namespaces/kube-system/pods/metrics-server-7f7b77f87c-798fc
    uid: 343b8284-79b2-4745-b6b1-0bb53cf359e4
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=60s
      - --kubelet-insecure-tls
      image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1@sha256:5ddc6458eb95f5c70bd13fdab90cbd7d6ad1066e5b528ad1dcb28b76c5fb2f00
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-nf9jm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-nf9jm
      secret:
        defaultMode: 420
        secretName: metrics-server-token-nf9jm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:45:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:45:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:43:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://46912310386df68eda81df18a7f4fbcecee820c5f2a0a74916f1953d46c1b773
      image: sha256:e57a417f15d368dc9390b1a320db238ce6ed523333287fd4f3d491c012274d3e
      imageID: k8s.gcr.io/metrics-server/metrics-server@sha256:5ddc6458eb95f5c70bd13fdab90cbd7d6ad1066e5b528ad1dcb28b76c5fb2f00
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:43:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2023-03-06T22:43:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2023-03-06T22:41:59Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "427"
    selfLink: /api/v1/namespaces/kube-system/pods/storage-provisioner
    uid: bab9f6cf-5f2f-4983-81c1-ffca81cc11a4
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: storage-provisioner-token-m49nw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: storage-provisioner-token-m49nw
      secret:
        defaultMode: 420
        secretName: storage-provisioner-token-m49nw
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:42:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://155297c6bfd06185e8d849a12ab068c2002060ffea329ca094efd10026cf7cf1
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944
      lastState: {}
      name: storage-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:42:41Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-03-06T22:42:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-03-06T22:49:48Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: scraper
    resourceVersion: "1994"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-container-creating
    uid: 1bac64de-77ad-4745-8846-d28692f5651c
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:50Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:50Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f14c7f7c43fe8a07e22b022318c3bddde74d68caf3f6fa2630b3e5ba2fd0722
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:69665d02cb32192e52e07644d76bc6f25abeb5410edc1c7a81a10ba3f0efb90a
      lastState:
        terminated:
          containerID: containerd://d598b0a25127398b59259409c8f089bae6ff5aba95e77cced7bee586a46bf196
          exitCode: 0
          finishedAt: "2023-03-06T22:50:49Z"
          reason: Completed
          startedAt: "2023-03-06T22:50:49Z"
      name: alpine
      ready: false
      restartCount: 4
      started: false
      state:
        terminated:
          containerID: containerd://4f14c7f7c43fe8a07e22b022318c3bddde74d68caf3f6fa2630b3e5ba2fd0722
          exitCode: 0
          finishedAt: "2023-03-06T22:51:45Z"
          reason: Completed
          startedAt: "2023-03-06T22:51:45Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.26
    podIPs:
    - ip: 10.244.0.26
    qosClass: Guaranteed
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:50:07Z"
    generateName: e2e-cronjob-1678143000-
    labels:
      controller-uid: 6f974505-0d0d-44d7-8aaf-5e51197a25d7
      job-name: e2e-cronjob-1678143000
    name: e2e-cronjob-1678143000-fqjqg
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-1678143000
      uid: 6f974505-0d0d-44d7-8aaf-5e51197a25d7
    resourceVersion: "1842"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-cronjob-1678143000-fqjqg
    uid: cab0f2ca-9b86-4f92-a686-a1f58909dae9
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - date; echo Hello from the Kubernetes cluster
      image: busybox
      imagePullPolicy: IfNotPresent
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:07Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://52993195c519f8ba7dc13175a4edc99b58f35c6fcfdea3e3c44c0670ce695e49
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:7b3ccabffc97de872a30dfd234fd972a66d247c8cfc69b0550f276481852627c
      lastState: {}
      name: busybox
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://52993195c519f8ba7dc13175a4edc99b58f35c6fcfdea3e3c44c0670ce695e49
          exitCode: 0
          finishedAt: "2023-03-06T22:50:08Z"
          reason: Completed
          startedAt: "2023-03-06T22:50:08Z"
    hostIP: 192.168.49.2
    phase: Succeeded
    podIP: 10.244.0.39
    podIPs:
    - ip: 10.244.0.39
    qosClass: BestEffort
    startTime: "2023-03-06T22:50:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:51:07Z"
    generateName: e2e-cronjob-1678143060-
    labels:
      controller-uid: 1d528c1d-426e-4c25-b71a-d2da85943e02
      job-name: e2e-cronjob-1678143060
    name: e2e-cronjob-1678143060-9txs6
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-1678143060
      uid: 1d528c1d-426e-4c25-b71a-d2da85943e02
    resourceVersion: "1954"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-cronjob-1678143060-9txs6
    uid: 98e26bfd-4d0c-4c94-b580-af269339ecf4
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - date; echo Hello from the Kubernetes cluster
      image: busybox
      imagePullPolicy: IfNotPresent
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:51:07Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:51:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:51:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:51:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fba99146599c80a29b2786b110b4d840ee171132d0b4d95d00cab8f4ee7bb149
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:7b3ccabffc97de872a30dfd234fd972a66d247c8cfc69b0550f276481852627c
      lastState: {}
      name: busybox
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fba99146599c80a29b2786b110b4d840ee171132d0b4d95d00cab8f4ee7bb149
          exitCode: 0
          finishedAt: "2023-03-06T22:51:08Z"
          reason: Completed
          startedAt: "2023-03-06T22:51:08Z"
    hostIP: 192.168.49.2
    phase: Succeeded
    podIP: 10.244.0.42
    podIPs:
    - ip: 10.244.0.42
    qosClass: BestEffort
    startTime: "2023-03-06T22:51:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-depl-6f56b84795-
    labels:
      app: deployment
      pod-template-hash: 6f56b84795
    name: e2e-depl-6f56b84795-b76p6
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-6f56b84795
      uid: 500f9a74-7398-4dd4-af9f-e1fd2ad6a99c
    resourceVersion: "1722"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-depl-6f56b84795-b76p6
    uid: f163ff55-46a7-4f45-a7f7-250d600ccaf3
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9e52c8a643668a1da0920a1a12114ec16cba7282555c6318d98eefd36e7d126b
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:7b3ccabffc97de872a30dfd234fd972a66d247c8cfc69b0550f276481852627c
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:49:51Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.29
    podIPs:
    - ip: 10.244.0.29
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-ds-
    labels:
      app: daemonset
      controller-revision-hash: bc7f8688b
      pod-template-generation: "1"
    name: e2e-ds-cbxvb
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-ds
      uid: b0665837-f724-4dde-ad2e-de180e347d1d
    resourceVersion: "1729"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-ds-cbxvb
    uid: d6b7b0ae-3d86-4142-864a-c746d40420e0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://30727750a0ddd76e30e495b030d2b95fa46d7fd08dcba8528da8119441d3e1b7
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:7b3ccabffc97de872a30dfd234fd972a66d247c8cfc69b0550f276481852627c
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:49:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.27
    podIPs:
    - ip: 10.244.0.27
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:55Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-66bqt
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1795"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-66bqt
    uid: e76bdbb7-4214-4e71-a000-38dbe0d71fd9
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:01Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:01Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5be061f0c65cbe1ab2c1817792cf76b2a1029aca15e8650f7875ede19444e2ab
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5be061f0c65cbe1ab2c1817792cf76b2a1029aca15e8650f7875ede19444e2ab
          exitCode: 42
          finishedAt: "2023-03-06T22:50:00Z"
          reason: Error
          startedAt: "2023-03-06T22:49:55Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.35
    podIPs:
    - ip: 10.244.0.35
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:50:45Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-hg95d
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1923"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-hg95d
    uid: b3e9b3bb-1a3e-4a29-9f6c-b711dcf0142e
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:51Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:51Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ce8f95340ab060a8fa0b3a83784227cc8042c1509c54f761fef75ea6adf690cb
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ce8f95340ab060a8fa0b3a83784227cc8042c1509c54f761fef75ea6adf690cb
          exitCode: 42
          finishedAt: "2023-03-06T22:50:50Z"
          reason: Error
          startedAt: "2023-03-06T22:50:45Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.40
    podIPs:
    - ip: 10.244.0.40
    qosClass: BestEffort
    startTime: "2023-03-06T22:50:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:50:45Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-hplk7
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1921"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-hplk7
    uid: 3f8e84bf-838c-483f-b340-5b2036aeab02
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:51Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:51Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://eac6c3e83ed9fa565b33430ce713fabeca74d520ee3f4c52c8ef587a98b0b62b
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://eac6c3e83ed9fa565b33430ce713fabeca74d520ee3f4c52c8ef587a98b0b62b
          exitCode: 42
          finishedAt: "2023-03-06T22:50:50Z"
          reason: Error
          startedAt: "2023-03-06T22:50:45Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.41
    podIPs:
    - ip: 10.244.0.41
    qosClass: BestEffort
    startTime: "2023-03-06T22:50:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-k24pl
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1755"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-k24pl
    uid: cde0be2e-8c91-469c-89a7-7dcf29f68a8d
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:54Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:54Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://068edbbbfb690724c0b6c8ea79c77f1c38130e51b1bf6bb2f85350331e73b328
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://068edbbbfb690724c0b6c8ea79c77f1c38130e51b1bf6bb2f85350331e73b328
          exitCode: 42
          finishedAt: "2023-03-06T22:49:54Z"
          reason: Error
          startedAt: "2023-03-06T22:49:49Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.33
    podIPs:
    - ip: 10.244.0.33
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-kf9xh
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1745"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-kf9xh
    uid: dbd28743-6c04-4f2d-b5ae-42dfb882b06c
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:54Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:54Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8abc1b48305aa3ed069a8d950fe8cf569fae414e813e1570580fc6bc71d5bb94
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8abc1b48305aa3ed069a8d950fe8cf569fae414e813e1570580fc6bc71d5bb94
          exitCode: 42
          finishedAt: "2023-03-06T22:49:54Z"
          reason: Error
          startedAt: "2023-03-06T22:49:49Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.32
    podIPs:
    - ip: 10.244.0.32
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:56Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-mh7nw
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1797"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-mh7nw
    uid: 8eb17e27-5c83-4b7b-b58b-feea280a6482
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:02Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:02Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cf42ee71972fa0d021fc4241690dde84c446d291dc0b73a81ff944fa8e1822aa
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cf42ee71972fa0d021fc4241690dde84c446d291dc0b73a81ff944fa8e1822aa
          exitCode: 42
          finishedAt: "2023-03-06T22:50:01Z"
          reason: Error
          startedAt: "2023-03-06T22:49:56Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.36
    podIPs:
    - ip: 10.244.0.36
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:50:05Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-s5gdk
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1847"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-s5gdk
    uid: e669225d-8ff9-43ad-a057-e079bdea8887
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:11Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:11Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dfc866d54dabf8fd8097f6804f80c5a3bbbefe194797bdaa1756cc5bbffd0b14
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://dfc866d54dabf8fd8097f6804f80c5a3bbbefe194797bdaa1756cc5bbffd0b14
          exitCode: 42
          finishedAt: "2023-03-06T22:50:10Z"
          reason: Error
          startedAt: "2023-03-06T22:50:05Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.37
    podIPs:
    - ip: 10.244.0.37
    qosClass: BestEffort
    startTime: "2023-03-06T22:50:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:50:05Z"
    generateName: e2e-failjob-
    labels:
      controller-uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
      job-name: e2e-failjob
    name: e2e-failjob-vj98j
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: 7ad65fbb-5b1d-481f-95e8-99d916a87a0e
    resourceVersion: "1848"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-failjob-vj98j
    uid: 95fc252d-c107-4282-a800-86b4d9b390b9
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:11Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:11Z"
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1746efa1f3c52c9432d1c4955940e23682692de610a38ac08158957317631239
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:95599adce80c5f938a8445eca59a8ac4e380f75b0e3e21971b37099c0c54a187
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1746efa1f3c52c9432d1c4955940e23682692de610a38ac08158957317631239
          exitCode: 42
          finishedAt: "2023-03-06T22:50:10Z"
          reason: Error
          startedAt: "2023-03-06T22:50:05Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.38
    podIPs:
    - ip: 10.244.0.38
    qosClass: BestEffort
    startTime: "2023-03-06T22:50:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-hpa-557f895878-
    labels:
      app: hpa
      pod-template-hash: 557f895878
      run: php-apache
    name: e2e-hpa-557f895878-kbw7t
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-557f895878
      uid: 1db50b50-9816-4e24-9f21-9666f5411d38
    resourceVersion: "1731"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-hpa-557f895878-kbw7t
    uid: 4b95a47d-bd73-467e-bc07-84cb7479e203
  spec:
    containers:
    - image: k8s.gcr.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c875f0a1ccebd7c29bb95615bf0959bd92e197d8f51d1b111016873668001570
      image: k8s.gcr.io/hpa-example:latest
      imageID: k8s.gcr.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:49:51Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.30
    podIPs:
    - ip: 10.244.0.30
    qosClass: Burstable
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-kube-state-metrics-5d6f76c688-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.6.0
      helm.sh/chart: kube-state-metrics-4.23.0
      pod-template-hash: 5d6f76c688
    name: e2e-kube-state-metrics-5d6f76c688-jf5tx
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-kube-state-metrics-5d6f76c688
      uid: 20a6a0e1-54db-482e-9db2-95f2b365f8f5
    resourceVersion: "1802"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-kube-state-metrics-5d6f76c688-jf5tx
    uid: d5a29964-debd-4f21-8b90-3ca1cd779976
  spec:
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: e2e-kube-state-metrics-token-zqp5l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: e2e-kube-state-metrics
    serviceAccountName: e2e-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: e2e-kube-state-metrics-token-zqp5l
      secret:
        defaultMode: 420
        secretName: e2e-kube-state-metrics-token-zqp5l
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:50:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a6d00e1b9525bb2a69a8e1b432fc539cb9ec3627225004f87a88a856ac3186ad
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.3.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:c9137505edaef138cc23479c73e46e9a3ef7ec6225b64789a03609c973b99030
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:49:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.28
    podIPs:
    - ip: 10.244.0.28
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-03-06T22:49:48Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: e2e-pending
    namespace: scraper
    resourceVersion: "1605"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-pending
    uid: e60bf72b-0732-4e12-86d7-c493fea70bc2
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match node selector.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-scraper-9c979498b-
    labels:
      app: scraper
      pod-template-hash: 9c979498b
    name: e2e-scraper-9c979498b-h2bgc
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-9c979498b
      uid: ecf812b6-9f7c-41c6-b61f-eee84235cedd
    resourceVersion: "1783"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-scraper-9c979498b-h2bgc
    uid: cf5a128a-8a69-4df5-a20f-2137d7b0c7ff
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: e2e-scraper-token-7rhjl
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: e2e-scraper-token-7rhjl
      secret:
        defaultMode: 420
        secretName: e2e-scraper-token-7rhjl
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b59b2d59ac2e268bccc0fb2ed386ccea2726eda258d13dd0aa068398ec0cafe2
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:69665d02cb32192e52e07644d76bc6f25abeb5410edc1c7a81a10ba3f0efb90a
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:49:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:48Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-0
    name: e2e-statefulset-0
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 4bd1629e-50d2-46bb-b0e1-16913dab17c4
    resourceVersion: "1736"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-statefulset-0
    uid: fd891b8e-36bb-448c-995b-25ac201c3087
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-0
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dac35aea4dbe0c6851254d40a4979fad19b1c101be14fdf0c589117ccd1ed65d
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:7b3ccabffc97de872a30dfd234fd972a66d247c8cfc69b0550f276481852627c
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:49:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.31
    podIPs:
    - ip: 10.244.0.31
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-06T22:49:54Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-1
    name: e2e-statefulset-1
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 4bd1629e-50d2-46bb-b0e1-16913dab17c4
    resourceVersion: "1775"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-statefulset-1
    uid: 2253b5b5-6ae8-4fb2-8884-7edebed5805c
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-x7nqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-1
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-x7nqk
      secret:
        defaultMode: 420
        secretName: default-token-x7nqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-06T22:49:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c99a0d9272e7cc90b9d52d97b6f8d771daca02218d20f268e4f8e28557f5244
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:7b3ccabffc97de872a30dfd234fd972a66d247c8cfc69b0550f276481852627c
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-06T22:49:56Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.34
    podIPs:
    - ip: 10.244.0.34
    qosClass: BestEffort
    startTime: "2023-03-06T22:49:54Z"
kind: List
metadata:
  resourceVersion: ""
