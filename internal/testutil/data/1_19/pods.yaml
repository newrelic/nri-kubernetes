apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:18Z"
    generateName: coredns-f9fd979d6-
    labels:
      k8s-app: kube-dns
      pod-template-hash: f9fd979d6
    name: coredns-f9fd979d6-l285v
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-f9fd979d6
      uid: 42b4e448-0bd8-4639-8275-52d47da10586
    resourceVersion: "657"
    selfLink: /api/v1/namespaces/kube-system/pods/coredns-f9fd979d6-l285v
    uid: 7ad6edd9-d692-4cf2-a767-84b9227a78f9
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns:1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-pp5wb
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: coredns-token-pp5wb
      secret:
        defaultMode: 420
        secretName: coredns-token-pp5wb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d7f7bdcec24cb988dadad5b3edfad1ce17ec1d540819090202f503816f18fd7c
      image: k8s.gcr.io/coredns:1.7.0
      imageID: docker-pullable://k8s.gcr.io/coredns@sha256:73ca82b4ce829766d4f1f10947c3a338888f876fbed0540dc849c89ff256e90c
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:20:19Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.2
    podIPs:
    - ip: 172.17.0.2
    qosClass: Burstable
    startTime: "2021-12-15T13:20:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.183.50:2379
      kubernetes.io/config.hash: 6ff9ce081bc09a3262102af51fcaac2f
      kubernetes.io/config.mirror: 6ff9ce081bc09a3262102af51fcaac2f
      kubernetes.io/config.seen: "2021-12-15T13:20:03.532773083Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-12-15T13:20:04Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 09dac8ba-23bd-404b-9c9b-7f5ba41660b7
    resourceVersion: "711"
    selfLink: /api/v1/namespaces/kube-system/pods/etcd-minikube
    uid: 8a26e3b5-84f9-46f8-9bdf-ff25e92ee18a
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.183.50:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --initial-advertise-peer-urls=https://192.168.183.50:2380
      - --initial-cluster=minikube=https://192.168.183.50:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.183.50:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.183.50:2380
      - --name=minikube
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: k8s.gcr.io/etcd:3.4.13-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources: {}
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a04a9879e0b6fdbfc62032c391d52dc26f16a2edee50e42cb8717a1092a70df0
      image: k8s.gcr.io/etcd:3.4.13-0
      imageID: docker-pullable://k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:19:55Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 192.168.183.50
    podIPs:
    - ip: 192.168.183.50
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.183.50:8443
      kubernetes.io/config.hash: 33319ef976663f944a96362a7914d327
      kubernetes.io/config.mirror: 33319ef976663f944a96362a7914d327
      kubernetes.io/config.seen: "2021-12-15T13:20:03.532777522Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-12-15T13:20:04Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 09dac8ba-23bd-404b-9c9b-7f5ba41660b7
    resourceVersion: "282"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-apiserver-minikube
    uid: 7e3450eb-7efc-499e-beb6-387f5d7a1aab
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.183.50
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --insecure-port=0
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: k8s.gcr.io/kube-apiserver:v1.19.16
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.183.50
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.183.50
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.183.50
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d5338d7e617c0672ff00b91c59848ed010c40568aa360d600372b6f9bc85c393
      image: k8s.gcr.io/kube-apiserver:v1.19.16
      imageID: docker-pullable://k8s.gcr.io/kube-apiserver@sha256:2cad6a4cae1713e720e00e1a1c7ef7644777fe111e0b7cbed5f50adb8a3cdf30
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:19:54Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 192.168.183.50
    podIPs:
    - ip: 192.168.183.50
    qosClass: Burstable
    startTime: "2021-12-15T13:20:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: c1c2810f7e5a359a5efaf6d5e68f599e
      kubernetes.io/config.mirror: c1c2810f7e5a359a5efaf6d5e68f599e
      kubernetes.io/config.seen: "2021-12-15T13:20:03.532778803Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-12-15T13:20:04Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 09dac8ba-23bd-404b-9c9b-7f5ba41660b7
    resourceVersion: "714"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-controller-manager-minikube
    uid: 71ea686d-dfd4-47bd-8bb7-cb06815e80f3
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --node-cidr-mask-size=24
      - --port=0
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.19.16
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://879dca5a3370904dc551615e7fa5d7ad78230f5a4b6e7fc9fe9545a7e4a2dc5c
      image: k8s.gcr.io/kube-controller-manager:v1.19.16
      imageID: docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:1d42f7d017f4ceeff46afb9cedd47b2b8140d1f2cc3bfebb57a40c3760acd482
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:19:54Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 192.168.183.50
    podIPs:
    - ip: 192.168.183.50
    qosClass: Burstable
    startTime: "2021-12-15T13:20:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:18Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 58b779b57f
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-9n65l
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 530b4189-99ef-4b34-8b5b-247435dd598b
    resourceVersion: "392"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-9n65l
    uid: ab58ff8e-8721-4824-996c-d00ebaa6e93e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.19.16
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-proxy-token-t4t5q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-proxy-token-t4t5q
      secret:
        defaultMode: 420
        secretName: kube-proxy-token-t4t5q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://78253e6f324ff367ff764e62cf681a4500dd71f0d34974e384c4935537c996bc
      image: k8s.gcr.io/kube-proxy:v1.19.16
      imageID: docker-pullable://k8s.gcr.io/kube-proxy@sha256:092f9526686d27964d17be772c42cde086690209cc8aea10c49991456eb879c2
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:20:19Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 192.168.183.50
    podIPs:
    - ip: 192.168.183.50
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 15aa95cd372cdc95f502c15bb9e343a7
      kubernetes.io/config.mirror: 15aa95cd372cdc95f502c15bb9e343a7
      kubernetes.io/config.seen: "2021-12-15T13:20:03.532779873Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-12-15T13:20:04Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 09dac8ba-23bd-404b-9c9b-7f5ba41660b7
    resourceVersion: "273"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-scheduler-minikube
    uid: 8f8b0075-f692-4434-9f3d-de3b0a3559eb
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      - --port=0
      image: k8s.gcr.io/kube-scheduler:v1.19.16
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f6eb7e55e01c87e4fca8ec7cecbe603bc2f31f3945abab8cf0f7dd108601fd16
      image: k8s.gcr.io/kube-scheduler:v1.19.16
      imageID: docker-pullable://k8s.gcr.io/kube-scheduler@sha256:1a335251eaef4e209d5757da0bf5499ecdce6e65413f7cb92ff4cc633d6fc7dd
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:19:54Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 192.168.183.50
    podIPs:
    - ip: 192.168.183.50
    qosClass: Burstable
    startTime: "2021-12-15T13:20:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:27Z"
    generateName: metrics-server-7894db45f8-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7894db45f8
    name: metrics-server-7894db45f8-cx7s6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7894db45f8
      uid: 72f5fa5a-8874-4024-a3f2-71943ff5962f
    resourceVersion: "564"
    selfLink: /api/v1/namespaces/kube-system/pods/metrics-server-7894db45f8-cx7s6
    uid: abf17991-a9dd-4537-b427-1c435ce4da38
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --kubelet-insecure-tls
      image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2@sha256:dbc33d7d35d2a9cc5ab402005aa7a0d13be6192f3550c7d42cba8d2d5e3a5d62
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez?exclude=readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz?exclude=livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 300Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-zzfnx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-zzfnx
      secret:
        defaultMode: 420
        secretName: metrics-server-token-zzfnx
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://671f27663cfefe03a36b453d464b9b91f21c769c7fe13423869ab3c27922c429
      image: k8s.gcr.io/metrics-server/metrics-server@sha256:dbc33d7d35d2a9cc5ab402005aa7a0d13be6192f3550c7d42cba8d2d5e3a5d62
      imageID: docker-pullable://k8s.gcr.io/metrics-server/metrics-server@sha256:dbc33d7d35d2a9cc5ab402005aa7a0d13be6192f3550c7d42cba8d2d5e3a5d62
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:20:31Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.3
    podIPs:
    - ip: 172.17.0.3
    qosClass: Burstable
    startTime: "2021-12-15T13:20:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2021-12-15T13:20:04Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "653"
    selfLink: /api/v1/namespaces/kube-system/pods/storage-provisioner
    uid: 9378176a-b62e-4dba-9b99-622672bf7b07
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: storage-provisioner-token-bt7k2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: storage-provisioner-token-bt7k2
      secret:
        defaultMode: 420
        secretName: storage-provisioner-token-bt7k2
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://612ff0b9e9c36029b749123c9851a9dccbf3348eb2a08cb49dc5e62599fabdf9
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944
      lastState:
        terminated:
          containerID: docker://61d72a238eac94d566b333b9ee4127459d5d0ff72b5c7990756a32360c4052af
          exitCode: 1
          finishedAt: "2021-12-15T13:20:49Z"
          reason: Error
          startedAt: "2021-12-15T13:20:19Z"
      name: storage-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:20:50Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 192.168.183.50
    podIPs:
    - ip: 192.168.183.50
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2021-12-15T13:20:36Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: scraper
    resourceVersion: "965"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-container-creating
    uid: 693cb042-7085-4316-9f85-874ff21b0c33
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-6d75q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-6d75q
      secret:
        defaultMode: 420
        secretName: default-token-6d75q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: alpine:latest
      imageID: ""
      lastState: {}
      name: alpine
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: 'Error response from daemon: Minimum memory limit allowed is 6MB'
          reason: CreateContainerError
    hostIP: 192.168.183.50
    phase: Pending
    podIP: 172.17.0.5
    podIPs:
    - ip: 172.17.0.5
    qosClass: Guaranteed
    startTime: "2021-12-15T13:20:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:36Z"
    generateName: e2e-depl-6f56b84795-
    labels:
      app: deployment
      pod-template-hash: 6f56b84795
    name: e2e-depl-6f56b84795-m9qwd
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-6f56b84795
      uid: 051b1791-58c7-4b9b-af79-4e506d2856b1
    resourceVersion: "705"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-depl-6f56b84795-m9qwd
    uid: 80cf6a1a-6a9e-4b09-b304-b65ee5677e6c
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-6d75q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-6d75q
      secret:
        defaultMode: 420
        secretName: default-token-6d75q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cff8e8fc219a758df53592aaa69c906a1554bb0e5d526bac043a030b1155f251
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b5cfd4befc119a590ca1a81d6bb0fa1fb19f1fbebd0397f25fae164abe1e8a6a
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:21:07Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.10
    podIPs:
    - ip: 172.17.0.10
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:36Z"
    generateName: e2e-ds-
    labels:
      app: daemonset
      controller-revision-hash: bc7f8688b
      pod-template-generation: "1"
    name: e2e-ds-m8lvs
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-ds
      uid: 9a92410d-4a30-471b-812f-735f47415b7b
    resourceVersion: "599"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-ds-m8lvs
    uid: 761c01f6-0102-4a44-9e08-ce0b8a5c63f3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-6d75q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-6d75q
      secret:
        defaultMode: 420
        secretName: default-token-6d75q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://de14d670e02039439c2872d88f03b9900c18fba4ca4647bd02f6e040de9496f2
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b5cfd4befc119a590ca1a81d6bb0fa1fb19f1fbebd0397f25fae164abe1e8a6a
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:20:44Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.4
    podIPs:
    - ip: 172.17.0.4
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:36Z"
    generateName: e2e-hpa-557f895878-
    labels:
      app: hpa
      pod-template-hash: 557f895878
      run: php-apache
    name: e2e-hpa-557f895878-z7bqb
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-557f895878
      uid: 52cb3e1d-204a-464d-a78d-d4fdf422b1a9
    resourceVersion: "684"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-hpa-557f895878-z7bqb
    uid: a98897f6-cb76-4809-a5c0-4fc956ce2d41
  spec:
    containers:
    - image: k8s.gcr.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-6d75q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-6d75q
      secret:
        defaultMode: 420
        secretName: default-token-6d75q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://34295c57145d4d54e5840a4ad22674163cb8b4b6463f610ff2719a4e6c6d338d
      image: k8s.gcr.io/hpa-example:latest
      imageID: docker-pullable://k8s.gcr.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:21:05Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.7
    podIPs:
    - ip: 172.17.0.7
    qosClass: Burstable
    startTime: "2021-12-15T13:20:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:36Z"
    generateName: e2e-kube-state-metrics-58cd7587c9-
    labels:
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/name: kube-state-metrics
      pod-template-hash: 58cd7587c9
    name: e2e-kube-state-metrics-58cd7587c9-2q6ng
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-kube-state-metrics-58cd7587c9
      uid: f94283b3-f113-4457-8152-6fba2da6c40b
    resourceVersion: "664"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-kube-state-metrics-58cd7587c9-2q6ng
    uid: 8b2c99c3-2980-490d-9e73-b83567528029
  spec:
    containers:
    - args:
      - --collectors=certificatesigningrequests
      - --collectors=configmaps
      - --collectors=cronjobs
      - --collectors=daemonsets
      - --collectors=deployments
      - --collectors=endpoints
      - --collectors=horizontalpodautoscalers
      - --collectors=ingresses
      - --collectors=jobs
      - --collectors=limitranges
      - --collectors=mutatingwebhookconfigurations
      - --collectors=namespaces
      - --collectors=networkpolicies
      - --collectors=nodes
      - --collectors=persistentvolumeclaims
      - --collectors=persistentvolumes
      - --collectors=poddisruptionbudgets
      - --collectors=pods
      - --collectors=replicasets
      - --collectors=replicationcontrollers
      - --collectors=resourcequotas
      - --collectors=secrets
      - --collectors=services
      - --collectors=statefulsets
      - --collectors=storageclasses
      - --collectors=validatingwebhookconfigurations
      - --collectors=volumeattachments
      - --telemetry-port=8081
      image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: e2e-kube-state-metrics-token-nj9c6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: e2e-kube-state-metrics
    serviceAccountName: e2e-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: e2e-kube-state-metrics-token-nj9c6
      secret:
        defaultMode: 420
        secretName: e2e-kube-state-metrics-token-nj9c6
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://86d1ea254e2258e6ca47fe0886368ef037d1fd254dbb5029ad8fda355504b0b9
      image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
      imageID: docker-pullable://k8s.gcr.io/kube-state-metrics/kube-state-metrics@sha256:47d3a12d9da6699a9d95df8aaff235305229ef08203fae3fc1f1d47b2a409f89
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:20:45Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.6
    podIPs:
    - ip: 172.17.0.6
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2021-12-15T13:20:36Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: e2e-pending
    namespace: scraper
    resourceVersion: "499"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-pending
    uid: 60973dd6-82f2-4c16-8612-f112b99edbbb
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-6d75q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-6d75q
      secret:
        defaultMode: 420
        secretName: default-token-6d75q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match node selector.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:29:50Z"
    generateName: e2e-scraper-9c979498b-
    labels:
      app: scraper
      pod-template-hash: 9c979498b
    name: e2e-scraper-9c979498b-5vml4
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-9c979498b
      uid: 8c89b53b-f2c9-479b-9ca4-81273470b1a0
    resourceVersion: "1140"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-scraper-9c979498b-5vml4
    uid: 06cefa13-ffe5-40b3-8e0d-16bf3dcdb890
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: e2e-scraper-token-87zjf
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: e2e-scraper-token-87zjf
      secret:
        defaultMode: 420
        secretName: e2e-scraper-token-87zjf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:29:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:29:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:29:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:29:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://488938ada6edf4797b74181e5c0e983dfe18b872a0effbd4679aff9b6a54249e
      image: alpine:latest
      imageID: docker-pullable://alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:29:51Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 192.168.183.50
    podIPs:
    - ip: 192.168.183.50
    qosClass: BestEffort
    startTime: "2021-12-15T13:29:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:36Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-0
    name: e2e-statefulset-0
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 51895e5f-80d2-414d-b3dd-b22220d23c9b
    resourceVersion: "618"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-statefulset-0
    uid: ebf7c084-56b1-4623-91d0-4ed6bee62d19
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-6d75q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-0
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-6d75q
      secret:
        defaultMode: 420
        secretName: default-token-6d75q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ba446444ab9ae600a909480a9cfd9ccab495b15c2359a36dc4e7b8d7d538a0a6
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b5cfd4befc119a590ca1a81d6bb0fa1fb19f1fbebd0397f25fae164abe1e8a6a
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:20:47Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.8
    podIPs:
    - ip: 172.17.0.8
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-12-15T13:20:47Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-1
    name: e2e-statefulset-1
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 51895e5f-80d2-414d-b3dd-b22220d23c9b
    resourceVersion: "693"
    selfLink: /api/v1/namespaces/scraper/pods/e2e-statefulset-1
    uid: 146b141a-3ee2-4066-b0ea-b76459d64ae8
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-6d75q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-1
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: default-token-6d75q
      secret:
        defaultMode: 420
        secretName: default-token-6d75q
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:21:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-12-15T13:20:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ad4bec098e0e598182749e086d38b8127f69676ec356463448a9dede152fc0a4
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b5cfd4befc119a590ca1a81d6bb0fa1fb19f1fbebd0397f25fae164abe1e8a6a
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-12-15T13:21:06Z"
    hostIP: 192.168.183.50
    phase: Running
    podIP: 172.17.0.9
    podIPs:
    - ip: 172.17.0.9
    qosClass: BestEffort
    startTime: "2021-12-15T13:20:47Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
