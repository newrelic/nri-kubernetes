apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-12-14T17:33:54Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "148"
    selfLink: /api/v1/namespaces/default/services/kubernetes
    uid: 6b8ff79a-4f03-41fc-8366-979962a3c5e3
  spec:
    clusterIP: 10.96.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2021-12-14T17:33:56Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "206"
    selfLink: /api/v1/namespaces/kube-system/services/kube-dns
    uid: 627c3e01-6455-4b53-96c4-5bc1b65ec312
  spec:
    clusterIP: 10.96.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/minikube-addons":"metrics-server","kubernetes.io/minikube-addons-endpoint":"metrics-server","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2021-12-14T17:34:09Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/minikube-addons: metrics-server
      kubernetes.io/minikube-addons-endpoint: metrics-server
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "313"
    selfLink: /api/v1/namespaces/kube-system/services/metrics-server
    uid: ed1f65e8-abbe-4a5f-b03d-02a052a66876
  spec:
    clusterIP: 10.105.138.168
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2021-12-14T17:34:23Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      run: php-apache
    name: e2e-hpa
    namespace: scraper
    resourceVersion: "440"
    selfLink: /api/v1/namespaces/scraper/services/e2e-hpa
    uid: cd21d820-0cc5-410b-a8ad-1a6cdf7e2497
  spec:
    clusterIP: 10.102.94.227
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      run: php-apache
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
      prometheus.io/scrape: "true"
    creationTimestamp: "2021-12-14T17:34:23Z"
    labels:
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      helm.sh/chart: kube-state-metrics-2.13.2
    name: e2e-kube-state-metrics
    namespace: scraper
    resourceVersion: "444"
    selfLink: /api/v1/namespaces/scraper/services/e2e-kube-state-metrics
    uid: 8e7caa02-cf97-4c55-b59f-69d56a17a43d
  spec:
    clusterIP: 10.103.92.61
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2021-12-14T17:34:23Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: e2e-lb
    namespace: scraper
    resourceVersion: "441"
    selfLink: /api/v1/namespaces/scraper/services/e2e-lb
    uid: 4f893af9-0ac2-4c4b-979a-9fdb46ae2182
  spec:
    clusterIP: 10.98.64.255
    externalName: newrelic.com
    externalTrafficPolicy: Cluster
    loadBalancerIP: 127.1.2.3
    ports:
    - nodePort: 32231
      port: 80
      protocol: TCP
      targetPort: 80
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2021-12-14T17:34:23Z"
    labels:
      app: statefulset
      app.kubernetes.io/managed-by: Helm
    name: e2e-statefulset
    namespace: scraper
    resourceVersion: "435"
    selfLink: /api/v1/namespaces/scraper/services/e2e-statefulset
    uid: 7ba9b37f-ded3-4368-bb6b-33613d4224d4
  spec:
    clusterIP: 10.101.69.121
    ports:
    - port: 8089
      protocol: TCP
      targetPort: 8089
    selector:
      app: statefulset
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
