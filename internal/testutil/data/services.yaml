apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        component: apiserver
        provider: kubernetes
      name: kubernetes
      namespace: default
    spec:
      clusterIP: 10.92.0.1
      clusterIPs:
        - 10.92.0.1
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: https
          port: 443
          protocol: TCP
          targetPort: 443
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        components.gke.io/component-name: l7-lb-controller-combined
        components.gke.io/component-version: 1.14.0-gke.0
        components.gke.io/layer: addon
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"components.gke.io/component-name":"l7-lb-controller-combined","components.gke.io/component-version":"1.14.0-gke.0","components.gke.io/layer":"addon"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"glbc","kubernetes.io/cluster-service":"true","kubernetes.io/name":"GLBCDefaultBackend"},"name":"default-http-backend","namespace":"kube-system"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080}],"selector":{"k8s-app":"glbc"},"type":"NodePort"}}
      labels:
        addonmanager.kubernetes.io/mode: Reconcile
        k8s-app: glbc
        kubernetes.io/cluster-service: "true"
        kubernetes.io/name: GLBCDefaultBackend
      name: default-http-backend
      namespace: kube-system
    spec:
      clusterIP: 10.92.11.245
      clusterIPs:
        - 10.92.11.245
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          nodePort: 31923
          port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        k8s-app: glbc
      sessionAffinity: None
      type: NodePort
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"KubeDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.92.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
      labels:
        addonmanager.kubernetes.io/mode: Reconcile
        k8s-app: kube-dns
        kubernetes.io/cluster-service: "true"
        kubernetes.io/name: KubeDNS
      name: kube-dns
      namespace: kube-system
    spec:
      clusterIP: 10.92.0.10
      clusterIPs:
        - 10.92.0.10
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: dns
          port: 53
          protocol: UDP
          targetPort: 53
        - name: dns-tcp
          port: 53
          protocol: TCP
          targetPort: 53
      selector:
        k8s-app: kube-dns
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"k8s-app":"metrics-server"}}}
      labels:
        addonmanager.kubernetes.io/mode: Reconcile
        kubernetes.io/cluster-service: "true"
        kubernetes.io/name: Metrics-server
      name: metrics-server
      namespace: kube-system
    spec:
      clusterIP: 10.92.3.230
      clusterIPs:
        - 10.92.3.230
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - port: 443
          protocol: TCP
          targetPort: https
      selector:
        k8s-app: metrics-server
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        cloud.google.com/neg: '{"ingress":true}'
        meta.helm.sh/release-name: newrelic
        meta.helm.sh/release-namespace: newrelic
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: newrelic
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kube-state-metrics
        helm.sh/chart: kube-state-metrics-2.13.2
      name: newrelic-kube-state-metrics
      namespace: newrelic
    spec:
      clusterIP: 10.92.11.9
      clusterIPs:
        - 10.92.11.9
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app.kubernetes.io/instance: newrelic
        app.kubernetes.io/name: kube-state-metrics
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        cloud.google.com/neg: '{"ingress":true}'
        meta.helm.sh/release-name: newrelic
        meta.helm.sh/release-namespace: newrelic
      labels:
        app.kubernetes.io/instance: newrelic
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.6.0
        helm.sh/chart: nri-metadata-injection-2.0.0
      name: newrelic-nri-metadata-injection
      namespace: newrelic
    spec:
      clusterIP: 10.92.12.179
      clusterIPs:
        - 10.92.12.179
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - port: 443
          protocol: TCP
          targetPort: 8443
      selector:
        app.kubernetes.io/name: nri-metadata-injection
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        cloud.google.com/neg: '{"ingress":true}'
        meta.helm.sh/release-name: psql
        meta.helm.sh/release-namespace: psql
      labels:
        app.kubernetes.io/instance: psql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: pgbouncer
        app.kubernetes.io/version: 1.16.0
        helm.sh/chart: pgbouncer-0.1.0
      name: psql-pgbouncer
      namespace: psql
    spec:
      clusterIP: 10.92.10.106
      clusterIPs:
        - 10.92.10.106
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: postgres
          port: 6432
          protocol: TCP
          targetPort: postgres
      selector:
        app.kubernetes.io/instance: psql
        app.kubernetes.io/name: pgbouncer
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        cloud.google.com/neg: '{"ingress":true}'
        meta.helm.sh/release-name: psql
        meta.helm.sh/release-namespace: psql
      labels:
        app.kubernetes.io/instance: psql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.12.7
      name: psql-postgresql
      namespace: psql
    spec:
      clusterIP: 10.92.0.101
      clusterIPs:
        - 10.92.0.101
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-postgresql
          port: 5432
          protocol: TCP
          targetPort: tcp-postgresql
      selector:
        app.kubernetes.io/instance: psql
        app.kubernetes.io/name: postgresql
        role: primary
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        cloud.google.com/neg: '{"ingress":true}'
        meta.helm.sh/release-name: psql
        meta.helm.sh/release-namespace: psql
      labels:
        app.kubernetes.io/instance: psql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.12.7
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      name: psql-postgresql-headless
      namespace: psql
    spec:
      clusterIP: None
      clusterIPs:
        - None
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-postgresql
          port: 5432
          protocol: TCP
          targetPort: tcp-postgresql
      publishNotReadyAddresses: true
      selector:
        app.kubernetes.io/instance: psql
        app.kubernetes.io/name: postgresql
      sessionAffinity: None
      type: ClusterIP
