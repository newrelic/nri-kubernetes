apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:51:59Z"
    generateName: coredns-bd6b6df9f-
    labels:
      k8s-app: kube-dns
      pod-template-hash: bd6b6df9f
    name: coredns-bd6b6df9f-8ccvf
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-bd6b6df9f
      uid: 93e671d8-0864-4d78-b4b9-2dacd78daf73
    resourceVersion: "475"
    uid: 8354d5ee-0513-4f6e-9396-4e7cc622b2ce
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.8.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7wbn
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: datagen-1-23
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-h7wbn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://aaffdb65e6479c50328debd2e0ed2315e878cdd6e04a55db34d7f6ba2f65c47b
      image: k8s.gcr.io/coredns/coredns:v1.8.6
      imageID: k8s.gcr.io/coredns/coredns@sha256:5b6ec0d6de9baaf3e92d0f66cd96a25b9edbce8716f5f15dcd1a616b3abd590e
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:52:15Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2023-05-31T02:51:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: 06c124ff1876b73bb546d1f36c87f2a9
      kubernetes.io/config.mirror: 06c124ff1876b73bb546d1f36c87f2a9
      kubernetes.io/config.seen: "2023-05-31T02:51:51.149095084Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-05-31T02:51:51Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-datagen-1-23
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-23
      uid: c7cbfe36-73ca-4189-ad19-f4b7e15f4bc4
    resourceVersion: "458"
    uid: 487677eb-d981-4cdb-89d8-c587845d27db
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --experimental-initial-corrupt-check=true
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=datagen-1-23=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=datagen-1-23
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.6-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://724fd4cb8f8e7e393ba664a1cbbf18ea6fa834f9f579fbd36e2d26010f6b19de
      image: k8s.gcr.io/etcd:3.5.6-0
      imageID: k8s.gcr.io/etcd@sha256:dd75ec974b0a2a6f6bb47001ba09207976e625db898d1b16735528c009cb171c
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:51:41Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-05-31T02:51:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:51:59Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 7f85979676
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-cwcn2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: 8637ee38-ccf3-4e9d-a244-7d81e9a57f12
    resourceVersion: "466"
    uid: b205bf24-d489-4544-bbdb-ee05864230c7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-23
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      image: kindest/kindnetd:v20230330-48f316cd
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gtmbx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-gtmbx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9f184f8f2797743b103a4794bef446c3b9992b4756c7d0d9ee324e497755c595
      image: docker.io/kindest/kindnetd:v20230330-48f316cd
      imageID: docker.io/kindest/kindnetd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:52:06Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Guaranteed
    startTime: "2023-05-31T02:51:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: 6076315e638734fca18ed5fd9271284e
      kubernetes.io/config.mirror: 6076315e638734fca18ed5fd9271284e
      kubernetes.io/config.seen: "2023-05-31T02:51:40.604633802Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-05-31T02:51:44Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-datagen-1-23
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-23
      uid: c7cbfe36-73ca-4189-ad19-f4b7e15f4bc4
    resourceVersion: "372"
    uid: ee731d86-0bd4-4528-84b2-9e15ab49c536
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.23.17
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7fe5b09d6301c1311319eb86aa29fc0674e4c2e260c8dc757871f477ff7347d7
      image: k8s.gcr.io/kube-apiserver:v1.23.17
      imageID: k8s.gcr.io/kube-apiserver@sha256:46953dc9bc74e9a5dc86a994b3f7717805f9d0c690bafe78ab7af631b757decf
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:51:41Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-05-31T02:51:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 6b7142b623e112cc41b7c5a0560687ba
      kubernetes.io/config.mirror: 6b7142b623e112cc41b7c5a0560687ba
      kubernetes.io/config.seen: "2023-05-31T02:51:51.149110834Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-05-31T02:51:51Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-datagen-1-23
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-23
      uid: c7cbfe36-73ca-4189-ad19-f4b7e15f4bc4
    resourceVersion: "368"
    uid: 1adbe0af-adb5-4489-b9a4-e09a256a7e66
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.23.17
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://672416de35840ac6f87581d870407d41e44c85f5c4a70a9bcea6b0c6443dd08f
      image: k8s.gcr.io/kube-controller-manager:v1.23.17
      imageID: k8s.gcr.io/kube-controller-manager@sha256:fd32cfc25e88bdecd9259b4d207f5ff9389e5b926ac19319af46731cd8469153
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:51:41Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-05-31T02:51:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:51:59Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5cc54fc4b6
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-h8fg5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: b98d43d4-3c98-41bd-8b27-cf5f42b6743c
    resourceVersion: "460"
    uid: 2e39735f-326c-4640-af5d-11df37c701b8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-23
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.23.17
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6fch9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-6fch9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3f268288153717efc13a56abb2298d845854494b2e88bbcdef7ed3128cfe80ac
      image: k8s.gcr.io/kube-proxy:v1.23.17
      imageID: k8s.gcr.io/kube-proxy@sha256:9305d3c1859b77c6e4d7b42ac477f7a4f955883459f2656b3543d551d3245c83
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:52:00Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-05-31T02:51:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: c63d3015daf6b9a2ba0f60432d2de441
      kubernetes.io/config.mirror: c63d3015daf6b9a2ba0f60432d2de441
      kubernetes.io/config.seen: "2023-05-31T02:51:51.149111667Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-05-31T02:51:51Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-datagen-1-23
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: datagen-1-23
      uid: c7cbfe36-73ca-4189-ad19-f4b7e15f4bc4
    resourceVersion: "370"
    uid: 9c018b4e-e118-4e13-b232-ab968e1ac74c
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      image: registry.k8s.io/kube-scheduler:v1.23.17
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8b4b7a663a2603a132d32c57d95917b526942f314cb32eae4fb1f6bb1bd1e707
      image: k8s.gcr.io/kube-scheduler:v1.23.17
      imageID: k8s.gcr.io/kube-scheduler@sha256:22a823de026e68b2661b0706efcbed4b026efa7e37a0de400251f8576f352ea5
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:51:41Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2023-05-31T02:51:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:16Z"
    generateName: metrics-server-6796b9d575-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 6796b9d575
    name: metrics-server-6796b9d575-sq6xl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-6796b9d575
      uid: 34ea7072-f0e3-4171-9dc1-35cff0e46333
    resourceVersion: "526"
    uid: 3c64e49b-31e1-40af-b383-b0916b0321ff
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=60s
      - --kubelet-insecure-tls
      image: registry.k8s.io/metrics-server/metrics-server:v0.6.3@sha256:c60778fa1c44d0c5a0c4530ebe83f9243ee6fc02f4c3dc59226c201931350b10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bd487
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-bd487
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6725e32c9ffeb7d05ff312e5caa76e0c9f07f54b5fdbbbe0ea00f2e8aa45e0a5
      image: sha256:8e22bf689cda7eb34081c7bed8d3c97fac366b3d9b60c829a6719249f4684cd8
      imageID: registry.k8s.io/metrics-server/metrics-server@sha256:c60778fa1c44d0c5a0c4530ebe83f9243ee6fc02f4c3dc59226c201931350b10
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:52:23Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2023-05-31T02:52:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2023-05-31T02:51:47Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "686"
    uid: 968233a9-5045-4b5b-b291-f959075cac35
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mgg56
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-mgg56
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:51:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://18a8c859c96703b2fde000f6334388633b13e19bd6b8fbf6b639457a3c59f3b3
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: sha256:66749159455b3f08c8318fe0233122f54d0f5889f9c5fdfb73c3fd9d99895b51
      lastState:
        terminated:
          containerID: containerd://2d8b189c4ec0bb23e6f9412e4177471f854d4903fbb84ebdcef0f7441e4c4cbf
          exitCode: 1
          finishedAt: "2023-05-31T02:52:30Z"
          reason: Error
          startedAt: "2023-05-31T02:52:00Z"
      name: storage-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:52:30Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-05-31T02:51:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-05-31T02:52:29Z"
    labels:
      app: creating
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: scraper
    resourceVersion: "1246"
    uid: 95389d89-d611-449f-aa06-f953f36f1f50
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lp6tg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lp6tg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:59:58Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:59:58Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d649491714cc9a229765fab28c7310fcf1c3d424fdc73c0e4be4a251282d2d71
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11
      lastState:
        terminated:
          containerID: containerd://d649491714cc9a229765fab28c7310fcf1c3d424fdc73c0e4be4a251282d2d71
          exitCode: 0
          finishedAt: "2023-05-31T02:59:57Z"
          reason: Completed
          startedAt: "2023-05-31T02:59:56Z"
      name: alpine
      ready: false
      restartCount: 6
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=alpine pod=e2e-container-creating_scraper(95389d89-d611-449f-aa06-f953f36f1f50)
          reason: CrashLoopBackOff
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: Guaranteed
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: scraper
    creationTimestamp: "2023-05-31T02:52:29Z"
    labels:
      app: pending
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-pending
    namespace: scraper
    resourceVersion: "576"
    uid: 011aeed3-9fe9-41fe-8cd8-f1f366e2fead
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7k9p4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7k9p4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match Pod''s node affinity/selector.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T03:00:00Z"
    generateName: e2e-cronjob-28091700-
    labels:
      app: cronjob
      controller-uid: 18df1ccb-327e-483e-8f7b-6d19e240507a
      job-name: e2e-cronjob-28091700
    name: e2e-cronjob-28091700-z22tt
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-cronjob-28091700
      uid: 18df1ccb-327e-483e-8f7b-6d19e240507a
    resourceVersion: "1236"
    uid: 365e4c13-aedc-436c-999c-20c4be020d99
  spec:
    containers:
    - command:
      - perl
      - -Mbignum=bpi
      - -wle
      - print bpi(15000)
      image: perl:5.34.0
      imagePullPolicy: IfNotPresent
      name: compute-pi-digits
      resources:
        limits:
          cpu: 800m
          memory: 100Mi
        requests:
          cpu: 400m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2trg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-p2trg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T03:00:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T03:00:00Z"
      message: 'containers with unready status: [compute-pi-digits]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T03:00:00Z"
      message: 'containers with unready status: [compute-pi-digits]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T03:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: perl:5.34.0
      imageID: ""
      lastState: {}
      name: compute-pi-digits
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: Burstable
    startTime: "2023-05-31T03:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-depl-588f84c7-
    labels:
      app: deployment
      pod-template-hash: 588f84c7
    name: e2e-depl-588f84c7-29bwj
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-588f84c7
      uid: 72c360b7-59bc-4e8e-b105-9ba7e526ade0
    resourceVersion: "795"
    uid: be83af13-db83-461c-a438-9b8f3da7dca2
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kwc5m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-kwc5m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://65905b2441cb044b91f819d27ec0679896fad60d69a31b664f4d505f2c26dc41
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:560af6915bfc8d7630e50e212e08242d37b63bd5c1ccf9bd4acccf116e262d5b
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:53:11Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.12
    podIPs:
    - ip: 10.244.0.12
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-depl-588f84c7-
    labels:
      app: deployment
      pod-template-hash: 588f84c7
    name: e2e-depl-588f84c7-7bzn4
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-depl-588f84c7
      uid: 72c360b7-59bc-4e8e-b105-9ba7e526ade0
    resourceVersion: "793"
    uid: 65cda64d-3c6e-4cd5-a723-5dd38088563d
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /pv
        name: pv
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sqjjg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pv
      persistentVolumeClaim:
        claimName: e2e
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-sqjjg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4d6f2cf593ce8782e31168ec52b9161cf8124a1ea1f751afde8f5b067ced8b85
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:560af6915bfc8d7630e50e212e08242d37b63bd5c1ccf9bd4acccf116e262d5b
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:53:10Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.11
    podIPs:
    - ip: 10.244.0.11
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-ds-
    labels:
      app: daemonset
      controller-revision-hash: 767bf86688
      pod-template-generation: "1"
    name: e2e-ds-l7grw
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-ds
      uid: cde494ff-2049-4903-b24a-287d95243551
    resourceVersion: "735"
    uid: ca51d28a-061e-40cd-b9a5-efaf4ad0320a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - datagen-1-23
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-trq9s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-trq9s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8398d2699dcf267b38e8f8617567fb3c68ea808ae3b37e37935311fc9bafc425
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:560af6915bfc8d7630e50e212e08242d37b63bd5c1ccf9bd4acccf116e262d5b
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:52:59Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-85lb2
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "820"
    uid: f42c0ae0-2198-455e-8ab4-79b2297556c2
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnqvw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bnqvw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:14Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:14Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bfec0e21502325856687e1d9e009ecd1d293fcfcdfffab3daf715b216bd1e626
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bfec0e21502325856687e1d9e009ecd1d293fcfcdfffab3daf715b216bd1e626
          exitCode: 42
          finishedAt: "2023-05-31T02:53:13Z"
          reason: Error
          startedAt: "2023-05-31T02:53:08Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.9
    podIPs:
    - ip: 10.244.0.9
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:53:16Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-8k4nk
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "858"
    uid: 1b619b86-9770-4bcf-a98d-835d1ca49e09
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ckxnn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ckxnn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:22Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:22Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cb8c179ecc997a1fa598da0f026db6bc992d9cfef0c70005ada6340de4558803
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cb8c179ecc997a1fa598da0f026db6bc992d9cfef0c70005ada6340de4558803
          exitCode: 42
          finishedAt: "2023-05-31T02:53:22Z"
          reason: Error
          startedAt: "2023-05-31T02:53:17Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: BestEffort
    startTime: "2023-05-31T02:53:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:54:46Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-g5k9b
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "994"
    uid: 000cb6ba-222f-44bc-8930-9dcbecd8a96a
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xcfrm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xcfrm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:52Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:52Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f8f491fa49f24400fe1376a3d76a605f1d3ae6ff78e4e8f278703a74a10f6e8e
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f8f491fa49f24400fe1376a3d76a605f1d3ae6ff78e4e8f278703a74a10f6e8e
          exitCode: 42
          finishedAt: "2023-05-31T02:54:52Z"
          reason: Error
          startedAt: "2023-05-31T02:54:47Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.19
    podIPs:
    - ip: 10.244.0.19
    qosClass: BestEffort
    startTime: "2023-05-31T02:54:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:53:26Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-hbkxb
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "894"
    uid: 67d0980b-292c-44b2-8c3a-92d2974f8726
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hnjh4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hnjh4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:32Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:32Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ea991a8cbdc74871a67b190dcd84f62b5e65e654e7e4ec504acca003dcf93e3d
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ea991a8cbdc74871a67b190dcd84f62b5e65e654e7e4ec504acca003dcf93e3d
          exitCode: 42
          finishedAt: "2023-05-31T02:53:32Z"
          reason: Error
          startedAt: "2023-05-31T02:53:27Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.16
    podIPs:
    - ip: 10.244.0.16
    qosClass: BestEffort
    startTime: "2023-05-31T02:53:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:53:26Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-nvsbj
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "893"
    uid: 394ee1c3-1ddc-4842-8f48-22e6f3835f90
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-twm9n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-twm9n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:32Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:32Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://315bc06d01b8f5dd3f93be8568ac8e1704f3da00ec29d0076a973884d969763a
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://315bc06d01b8f5dd3f93be8568ac8e1704f3da00ec29d0076a973884d969763a
          exitCode: 42
          finishedAt: "2023-05-31T02:53:32Z"
          reason: Error
          startedAt: "2023-05-31T02:53:27Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.17
    podIPs:
    - ip: 10.244.0.17
    qosClass: BestEffort
    startTime: "2023-05-31T02:53:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:54:46Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-r7lj9
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "993"
    uid: b0971adc-c204-48c6-b03f-2afe38ee34cf
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c55hb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-c55hb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:52Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:52Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:54:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b379451c6e69f0c272dc68fd19ac797a9595027520ced353f0e29259ad1c9d26
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b379451c6e69f0c272dc68fd19ac797a9595027520ced353f0e29259ad1c9d26
          exitCode: 42
          finishedAt: "2023-05-31T02:54:52Z"
          reason: Error
          startedAt: "2023-05-31T02:54:47Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.18
    podIPs:
    - ip: 10.244.0.18
    qosClass: BestEffort
    startTime: "2023-05-31T02:54:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-tknds
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "819"
    uid: 8eef09fa-b9e6-4993-b665-825d0f7b851e
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rsmxp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rsmxp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:14Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:14Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://edfc34f1ed087f34d0b2386a4bba50ae45da733e920e1211b9209c565b16572d
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://edfc34f1ed087f34d0b2386a4bba50ae45da733e920e1211b9209c565b16572d
          exitCode: 42
          finishedAt: "2023-05-31T02:53:14Z"
          reason: Error
          startedAt: "2023-05-31T02:53:09Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.10
    podIPs:
    - ip: 10.244.0.10
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:53:16Z"
    generateName: e2e-failjob-
    labels:
      app: failjob
      controller-uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
      job-name: e2e-failjob
    name: e2e-failjob-x5qxz
    namespace: scraper
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: e2e-failjob
      uid: dde5d534-07db-495b-93fd-c16bdb7d14dc
    resourceVersion: "857"
    uid: a62eb662-eb01-45bb-a8c0-bcd62eb688e8
  spec:
    containers:
    - args:
      - -c
      - echo "Hello world! I'm going to exit with 42 to simulate a software bug."
        && sleep 5 && exit 42
      command:
      - bash
      image: docker.io/library/bash:5
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6b26l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6b26l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:22Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:22Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://be9e1277441f9e26156b26827a610c903f7b7d38d24278535f0f20b2415c1885
      image: docker.io/library/bash:5
      imageID: docker.io/library/bash@sha256:d6f71002f8b3cb7660d5bec2436a850564e79673c43be75f31908c250f808458
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://be9e1277441f9e26156b26827a610c903f7b7d38d24278535f0f20b2415c1885
          exitCode: 42
          finishedAt: "2023-05-31T02:53:22Z"
          reason: Error
          startedAt: "2023-05-31T02:53:17Z"
    hostIP: 192.168.49.2
    phase: Failed
    podIP: 10.244.0.14
    podIPs:
    - ip: 10.244.0.14
    qosClass: BestEffort
    startTime: "2023-05-31T02:53:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-hpa-657b9f84cf-
    labels:
      app: hpa
      pod-template-hash: 657b9f84cf
      run: php-apache
    name: e2e-hpa-657b9f84cf-mwzpt
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-657b9f84cf
      uid: 10ae7c9d-f969-490f-922e-e3c3eebe796a
    resourceVersion: "724"
    uid: 4797b920-8bbf-422e-9279-789cf618068c
  spec:
    containers:
    - image: registry.k8s.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kdxrv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kdxrv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6e1bd784f0ef1974aaca2134cf4595152a13462dfe61cb00ac4d1af26aed7495
      image: registry.k8s.io/hpa-example:latest
      imageID: registry.k8s.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:52:56Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: Burstable
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-kube-state-metrics-b57b76d79-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: e2e
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.6.0
      helm.sh/chart: kube-state-metrics-4.23.0
      pod-template-hash: b57b76d79
    name: e2e-kube-state-metrics-b57b76d79-2s7c5
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-kube-state-metrics-b57b76d79
      uid: 328f9546-7272-48f3-b2ac-ac06021e4f2d
    resourceVersion: "781"
    uid: a0a2f9f7-46c3-4db4-82f6-0f1bc5e6a6ec
  spec:
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.6.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-85b9n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: e2e-kube-state-metrics
    serviceAccountName: e2e-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-85b9n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b22066f40bd24e1cd52dd739122ab939072b03ed35b74128980dd146d60886d2
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.6.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:bdab4e49d71d272cf944c8612dff5ab1250f0fafdae45c22980286ac0c016032
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:53:02Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-scraper-f4cc4c5d-
    labels:
      app: scraper
      pod-template-hash: f4cc4c5d
    name: e2e-scraper-f4cc4c5d-n6szb
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-f4cc4c5d
      uid: 6c53623b-6b57-4827-9750-0e6dcc874c02
    resourceVersion: "767"
    uid: 164c61ef-32bd-4a61-861a-6e228105488e
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lm2qs
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lm2qs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://521fa1a0713a3f981d6eb22e46ea5212b0651c0ef4ca8ab8866499cb51c9e3a6
      image: docker.io/library/alpine:latest
      imageID: docker.io/library/alpine@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:53:05Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:52:29Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-0
    name: e2e-statefulset-0
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 1e134664-2437-423d-9791-ae38e8e3eff4
    resourceVersion: "749"
    uid: f7c3717e-62f0-4ade-afd6-c788b198b57e
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fdq5m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-0
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-fdq5m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:52:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8d7f38014b99b3b545676c2a083970771b8181c164887c6ec4381ba138c346a4
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:560af6915bfc8d7630e50e212e08242d37b63bd5c1ccf9bd4acccf116e262d5b
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:53:03Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: BestEffort
    startTime: "2023-05-31T02:52:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-05-31T02:53:03Z"
    generateName: e2e-statefulset-
    labels:
      app: statefulset
      controller-revision-hash: e2e-statefulset-66fd9b9b7b
      statefulset.kubernetes.io/pod-name: e2e-statefulset-1
    name: e2e-statefulset-1
    namespace: scraper
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-statefulset
      uid: 1e134664-2437-423d-9791-ae38e8e3eff4
    resourceVersion: "805"
    uid: ee004a93-89ba-4165-ab0b-1670e0b04f30
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: an-empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n7sn9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-statefulset-1
    nodeName: datagen-1-23
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 128Mi
      name: an-empty-dir
    - name: kube-api-access-n7sn9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-31T02:53:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f0cb5ba3a222990a1596e2fcf21599453766069f014c719a67c0e9999f989b27
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:560af6915bfc8d7630e50e212e08242d37b63bd5c1ccf9bd4acccf116e262d5b
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-31T02:53:12Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 10.244.0.13
    podIPs:
    - ip: 10.244.0.13
    qosClass: BestEffort
    startTime: "2023-05-31T02:53:03Z"
kind: List
metadata:
  resourceVersion: ""
