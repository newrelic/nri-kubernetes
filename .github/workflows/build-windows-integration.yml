name: Windows build

on:
  push:
    branches:
      - windowsImage*
  pull_request:
    branches:
      - windowsImage*
  workflow_dispatch:

jobs:
  build:
    name: Build integration for
    strategy:
      fail-fast: true
      matrix:
        windows:
          # Here we specify the GH runner where the image will be built.
          # Tag must exist in both https://hub.docker.com/_/microsoft-windows-servercore and
          # https://hub.docker.com/_/microsoft-windows-nanoserver, and must be matched with the runner.
          # In theory, newer versions could build old images using --isolation=hyperv, but unfortunately hyperv is not
          # enabled in GHA.
          - runner: windows-2019
            tag: ltsc2019
          - runner: windows-2022
            tag: ltsc2022
    runs-on: ${{ matrix.windows.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Generate date-based tag for testing
        run: $tag = Get-Date -Format "yyyyMMddHHmmss"; echo "TAG=$tag" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Get windows build
        id: osinfo
        shell: powershell
        run: |
          Get-ComputerInfo

      - uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build integration
        shell: powershell
        run: |
          go build -o ./bin/nri-kubernetes-windows-${{ matrix.windows.tag }}-amd64.exe ./cmd/nri-kubernetes
      - name: Build nri-kubernetes container
        shell: powershell
        run: |
          ls
          docker build --file Dockerfile.windows `
            --build-arg BASE_IMAGE_TAG=${{ matrix.windows.tag }} `
            -t newrelic/nri-kubernetes:windows-${{ matrix.windows.tag }}-alpha-$Env:tag . `

      - name: Login to DockerHub
        # if: ${{ ! github.event.pull_request }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.K8S_AGENTS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.K8S_AGENTS_DOCKERHUB_TOKEN }}

      - name: Push image
        # if: ${{ ! github.event.pull_request }}
        shell: powershell
        run: |
          docker push newrelic/nri-kubernetes:windows-${{ matrix.windows.tag }}-alpha-$Env:tag
