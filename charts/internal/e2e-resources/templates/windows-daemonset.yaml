{{- if and .Values.daemonSet.enabled .Values.windows.is2019 }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "nriKubernetes.e2e.kubelet.fullname.windows2019" .}}-daemonset
spec:
  selector:
    matchLabels:
      app: daemonset-w-2019
  template:
    metadata:
      labels:
        app: daemonset-w-2019
    spec:
      nodeSelector:
        kubernetes.io/os: windows
        node.kubernetes.io/windows-build: 10.0.17763
      tolerations:
        - key: "node.kubernetes.io/os"
          operator: "Equal"
          value: "windows"
          effect: "NoSchedule"
        - key: "node.kubernetes.io/windows-build"
          operator: "Equal"
          value: "10.0.17763"
          effect: "NoSchedule"
      containers:
        - name: random-text
          image: mcr.microsoft.com/windows/servercore:ltsc2019
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "100Mi"
            limits:
              cpu: "500m"
              memory: "200Mi"
          command:
            - powershell
            - " -Command"
            - |
              while ($true) {
                Write-Host "Random Text: $(Get-Random)";
                Start-Sleep -Seconds 10;
              }
          volumeMounts:
            - mountPath: /output
              name: storage
        {{- if .Values.demo.enabled }}
        - name: failing-container
          image: mcr.microsoft.com/windows/servercore:ltsc2019
          command:
            - powershell
            - " -Command"
            - |
              Write-Host "Hello world! I'm going to exit with 42 to simulate a software bug."
              Start-Sleep -Seconds 300
              exit 42
        {{- end }}
      volumes:
        - name: storage
          emptyDir:
            sizeLimit: 30Mi
{{- end }}
---
{{- if and .Values.daemonSet.enabled .Values.windows.is2022 }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "nriKubernetes.e2e.kubelet.fullname.windows2022" .}}-daemonset
spec:
  selector:
    matchLabels:
      app: daemonset-w-2022
  template:
    metadata:
      labels:
        app: daemonset-w-2022
    spec:
      nodeSelector:
        kubernetes.io/os: windows
        node.kubernetes.io/windows-build: 10.0.20348
      tolerations:
        - key: "node.kubernetes.io/os"
          operator: "Equal"
          value: "windows"
          effect: "NoSchedule"
        - key: "node.kubernetes.io/windows-build"
          operator: "Equal"
          value: "10.0.20348"
          effect: "NoSchedule"
      containers:
        - name: random-text
          image: mcr.microsoft.com/windows/servercore:ltsc2022
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "100Mi"
            limits:
              cpu: "500m"
              memory: "200Mi"
          command:
            - powershell
            - " -Command"
            - |
              while ($true) {
                Write-Host "Random Text: $(Get-Random)";
                Start-Sleep -Seconds 10;
              }
          volumeMounts:
            - mountPath: /output
              name: storage
        {{- if .Values.demo.enabled }}
        - name: failing-container
          image: mcr.microsoft.com/windows/servercore:ltsc2022
          command:
            - powershell
            - " -Command"
            - |
              Write-Host "Hello world! I'm going to exit with 42 to simulate a software bug."
              Start-Sleep -Seconds 300
              exit 42
        {{- end }}
      volumes:
        - name: storage
          emptyDir:
            sizeLimit: 30Mi
{{- end }}
