{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

# Helm installation

You can install this chart using [`nri-bundle`](https://github.com/newrelic/helm-charts/tree/master/charts/nri-bundle) located in the
[helm-charts repository](https://github.com/newrelic/helm-charts) or directly from this repository by adding this Helm repository:

```shell
helm repo add nri-kube-events https://newrelic.github.io/nri-kube-events
helm upgrade --install nri-kube-events/nri-kube-events -f your-custom-values.yaml
```

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

## Values managed globally

This chart implements the [New Relic's common Helm library](https://github.com/newrelic/helm-charts/tree/master/library/common-library) which
means that is has a seamless UX between things that are configurable across different Helm charts. So there are behaviours that could be
changed globally if you install this chart from `nri-bundle` or your own umbrella chart.

A really broad list of global managed values are `affinity`, `nodeSelector`, `tolerations`, `proxy` and many more.

For more information go to the [user's guide of the common library](https://github.com/newrelic/helm-charts/blob/master/library/common-library/README.md)

## Chart particularities

### Low data mode
There are two mechanisms to reduce the amount of data that this integration sends to New Relic. See this snippet fomr the `values.yaml` file:
```yaml
common:
  config:
    interval: 15s

lowDataMode: false
```

The `lowDataMode` toggle is the simplest way amd setting it to `true` changes the default scrape interval from 15 seconds (the default) to 30 seconds.

If you need for some reason to fine tune the amount of seconds you can use `common.config.interval` directly. If you take a look to the `values.yaml`
file, the value there is `nil`. If set any value there, the `lowDataMode` toggle is ignored and this value is issued.

Setting this interval above 40 seconds can make you experience issues with the Kubernetes Cluster Explorer so this chart limits setting the interval
inside the range of 10 to 40 seconds.

### Affinities and tolerations

The New Relic common library allows to set affinities, tolerations and nodeSelectors in globally with the resto of the integrations and products. This
integration in particular has affinities and tolerations set to be able to schedule pods in nodes that are tainted as master nodes and to schedule a
pod near the KSM to reduce the inter-node traffic.

Take a look to the [`values.yaml`](values.yaml) so see how to configure them if you are having problems scheduling pods where you want to.

### `hostNetwork` toggle

In versions below v3, changing the `privileged` mode affected the `hostNetwork`. We changed this behavior and now you can set pods to use `hostNetwork`
using the corresponding [flags from the common library](https://github.com/newrelic/helm-charts/blob/master/library/common-library/README.md)
(`.global.hostNetwork` and `.hostNetwork`) but the component that scrapers data from the control plane has always set `hostNetwork` to true (Look in the
[`values.yaml`](values.yaml) for `controlPlane.hostNetwork: true`)

This is because the most common configuration of the control plane components is to be configured to listen only to `localhost`.

If your cluster security policy does not allow to use `hostNetwork`, you can disable it control plane monitoring by setting `controlPlane.enabled` to
`false.`

### `privileged` toggle

The default value for `privileged` [from the common library](https://github.com/newrelic/helm-charts/blob/master/library/common-library/README.md) is
`false`.

In this chart it is set to true (Look in the [`values.yaml`](values.yaml) for `privileged: true`) because it set `kubelet` pods (the ones that scrape
metrics from the hosts itself) into privileged mode so it can fetch more fine-grained cpu, memory, process and network metrics for your nodes.

If your cluster security policy does not allow to to have `privileged` in your pod' security context, you can disable it by setting `privileged` to
`false.`

{{ template "chart.valuesSection" . }}

{{ if .Maintainers }}
## Maintainers
{{ range .Maintainers }}
{{- if .Name }}
{{- if .Url }}
* [{{ .Name }}]({{ .Url }})
{{- else }}
* {{ .Name }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

## Past Contributors

Previous iterations of this chart started as a community project in the [stable Helm chart repository](github.com/helm/charts/). New Relic is very thankful for all the 15+ community members that contributed and helped maintain the chart there over the years:

* coreypobrien
* sstarcher
* jmccarty3
* slayerjain
* ryanhope2
* rk295
* michaelajr
* isindir
* idirouhab
* ismferd
* enver
* diclophis
* jeffdesc
* costimuraru
* verwilst
* ezelenka
