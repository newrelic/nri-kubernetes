{{- if (.Values.kubelet.enabled) }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  name: {{ include "common.naming.fullname" . }}-kubelet
  {{- $legacyAnnotation:= fromYaml (include "newrelic.compatibility.annotations" .) -}}
  {{- with  include "newrelic.compatibility.valueWithFallback" (dict "legacy" $legacyAnnotation "supported" .Values.kubelet.annotations )}}
  annotations: {{ . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.updateStrategy }}
  updateStrategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.labels.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: kubelet
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: {{ include (print $.Template.BasePath "/kubelet/scraper-configmap.yaml") . | sha256sum }}
        checksum/agent-config: {{ include (print $.Template.BasePath "/kubelet/agent-configmap.yaml") . | sha256sum }}
        {{- if include "common.license.secret" . }}{{- /* If the is secret to template */}}
        checksum/license-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
        checksum/integrations_config: {{ include (print $.Template.BasePath "/kubelet/integrations-configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels.podLabels" . | nindent 8 }}
        app.kubernetes.io/component: kubelet
    spec:
      {{- with include "common.images.renderPullSecrets" ( dict "pullSecrets" (list .Values.images.pullSecrets) "context" .) }}
      imagePullSecrets:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "common.dnsConfig" . }}
      dnsConfig:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "common.priorityClassName" . }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with include "common.securityContext.pod" . }}
      securityContext:
        {{- . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccount.name" . }}
      hostNetwork: {{ include "common.hostNetwork.value" . }}
      {{- if include "nriKubernetes.controlPlane.hostNetwork" . }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}

      {{- if .Values.kubelet.initContainers }}
      initContainers: {{- tpl (.Values.kubelet.initContainers | toYaml) . | nindent 8 }}
      {{- end }}
      containers:
        - name: kubelet
          image: {{ include "common.images.image" ( dict "imageRoot" .Values.images.integration "context" .) }}
          imagePullPolicy: {{ .Values.images.integration.pullPolicy }}
          securityContext:
            {{- mustMergeOverwrite
                    (include "common.securityContext.container" . | fromYaml )
                    (include "newrelic.compatibility.securityContext" . | fromYaml )
                    | toYaml | nindent 12 }}
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: {{ get (fromYaml (include "nriKubernetes.kubelet.agentConfig" .)) "http_server_port" | quote }}
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: {{ include "common.cluster" . }}
            - name: "NRI_KUBERNETES_VERBOSE"
              value: {{ include "common.verboseLog.value" . | quote }}

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            # Required to connect to the kubelet
            - name: "NRI_KUBERNETES_NODEIP"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"

            {{- with .Values.kubelet.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.kubelet.extraEnvFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
            {{- with .Values.kubelet.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.kubelet.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
        - name: agent
          image: {{ include "common.images.image" ( dict "imageRoot" .Values.images.agent "context" .) }}
          args: [ "newrelic-infra" ]
          imagePullPolicy: {{ .Values.images.agent.pullPolicy }}
          securityContext:
            {{- include "nriKubernetes.kubelet.securityContext.agentContainer" . | nindent 12 }}
          ports:
            - containerPort: {{ get (fromYaml (include "nriKubernetes.kubelet.agentConfig" .)) "http_server_port" }}
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.license.secretName" . }}
                  key: {{ include "common.license.secretKeyName" . }}

            - name: "NRIA_OVERRIDE_HOSTNAME_SHORT"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"

            - name: "NRI_KUBERNETES_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"

            {{- if .Values.useNodeNameAsDisplayName }}
            - name: "NRIA_DISPLAY_NAME"
            {{- if .Values.prefixDisplayNameWithCluster }}
              value: "{{ include "common.cluster" . }}:$(NRI_KUBERNETES_NODE_NAME)"
            {{- else }}
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            {{- end }}
            {{- end }}

            {{- /* Needed to populate clustername in integration metrics */}}
            - name: "CLUSTER_NAME"
              value: {{ include "common.cluster" . }}
            - name: "NRIA_PASSTHROUGH_ENVIRONMENT"
              value: "CLUSTER_NAME"

            {{- /* Needed for autodiscovery since hostNetwork=false */}}
            - name: "NRIA_HOST"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"

            {{- with .Values.kubelet.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.kubelet.extraEnvFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
            - name: nri-integrations-cfg-volume
              mountPath: /etc/newrelic-infra/integrations.d/
            {{- if .Values.privileged }}
            - name: dev
              mountPath: /dev
            - name: host-docker-socket
              mountPath: /var/run/docker.sock
            - name: log
              mountPath: /var/log
            - name: host-volume
              mountPath: /host
              readOnly: true
            {{- end }}
            - mountPath: /var/db/newrelic-infra/data
              name: agent-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: agent-tmpfs-user-data
            - mountPath: /tmp
              name: agent-tmpfs-tmp
            {{- with .Values.kubelet.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.kubelet.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.privileged }}
        - name: dev
          hostPath:
            path: /dev
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: log
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
        {{- end }}
        - name: agent-tmpfs-data
          emptyDir: {}
        - name: agent-tmpfs-user-data
          emptyDir: {}
        - name: agent-tmpfs-tmp
          emptyDir: {}
        - name: nri-kubernetes-config
          configMap:
            name: {{ include "common.naming.fullname" . }}-kubelet
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: config
          configMap:
            name: {{ include "common.naming.fullname" . }}-agent-kubelet
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
        - name: nri-integrations-cfg-volume
          configMap:
            name: {{ include "common.naming.fullname" . }}-integrations-cfg
        {{- with .Values.kubelet.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with include "nriKubernetes.kubelet.affinity" . }}
      affinity:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "nriKubernetes.kubelet.tolerations" . }}
      tolerations:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubelet.nodeSelector | default (fromYaml (include "common.nodeSelector" .)) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end -}}
{{- end }}
