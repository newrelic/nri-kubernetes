suite: test ksm's affinity
templates:
  - templates/ksm/deployment.yaml
  - templates/ksm/scraper-configmap.yaml
  - templates/ksm/agent-configmap.yaml
  - templates/agent-configmap.yaml
  - templates/secret.yaml
tests:
  - it: affinity has defaults
    set:
      licenseKey: test
      cluster: test
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: kube-state-metrics
                  weight: 100
        template: templates/ksm/deployment.yaml

  - it: affinity is set by legacy value
    set:
      licenseKey: test
      cluster: test
      global.affinity: {}
      affinity: {}
      nodeAffinity:
        legacy: legacy
      ksm.affinity: {}
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:  # Legacy value is nodeAffinity and templates affinity objects
              legacy: legacy
            podAffinity:  # Default podAffinity is not overridden
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: kube-state-metrics
                  weight: 100
        template: templates/ksm/deployment.yaml

  - it: affinity is set by supported value
    set:
      licenseKey: test
      cluster: test
      global.affinity: {}
      affinity: {}
      nodeAffinity: {}
      ksm.affinity:
        podAffinity:  # We have to override the whole tree if we want to override the defaults
          preferredDuringSchedulingIgnoredDuringExecution:
            - test: test
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - test: test
        template: templates/ksm/deployment.yaml

# This is an expected behavior from the common library and tested there but as we are overwriting this
# helper is a good idea to retest it in case any library update brakes our expected behavior
  - it: global is overridable by local in common-library
    set:
      licenseKey: test
      cluster: test
      global.affinity:
        global: global
      affinity:
        local: local
      nodeAffinity: {}
      ksm.affinity: null
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            local: local
        template: templates/ksm/deployment.yaml

  - it: global is overridable by legacy value
    set:
      licenseKey: test
      cluster: test
      global.affinity:
        global: global
      affinity: {}
      nodeAffinity:
        legacy: legacy
      ksm.affinity: null
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:  # Legacy value is nodeAffinity and templates affinity objects
              legacy: legacy
        template: templates/ksm/deployment.yaml

  - it: common-library's affinity is overridable by supported value
    set:
      licenseKey: test
      cluster: test
      global.affinity:
        global: global
      affinity: {}
      nodeAffinity: {}
      ksm.affinity:
        podAffinity:  # We have to override the whole tree if we want to override the defaults
          preferredDuringSchedulingIgnoredDuringExecution:
            - test: test
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - test: test
        template: templates/ksm/deployment.yaml

  - it: common-library's affinity is overridable by legacy value
    set:
      licenseKey: test
      cluster: test
      global.affinity:
        global: global
      affinity:
        local: local
      nodeAffinity:
        legacy: legacy
      ksm.affinity: {}
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:  # Legacy value is nodeAffinity and templates affinity objects
              legacy: legacy
            podAffinity:  # Default podAffinity is not overridden
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: kube-state-metrics
                  weight: 100
        template: templates/ksm/deployment.yaml

  - it: common-library's local is overridable by supported value
    set:
      licenseKey: test
      cluster: test
      global.affinity: {}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - local: local
      nodeAffinity: {}
      ksm.affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - test: test
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - test: test
        template: templates/ksm/deployment.yaml
